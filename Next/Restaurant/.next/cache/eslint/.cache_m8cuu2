[{"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\category.js":"1","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\dashboard.js":"2","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\index.js":"3","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\items.js":"4","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\orders.js":"5","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\profile.js":"6","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\auth\\[...nextauth].js":"7","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\postCategory.js":"8","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\postItems.js":"9","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\postUser.js":"10","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\signupUser.js":"11","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\uploadImage.js":"12","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\authError.js":"13","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\checkout.js":"14","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\index.js":"15","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\menu.js":"16","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\menuItem\\[menuItem].js":"17","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\orders\\[userId].js":"18","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\search.js":"19","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\user\\profile.js":"20","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\_app.js":"21","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\adminItems\\itemsModal-Add.js":"22","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\adminItems\\itemsModal-Edit.js":"23","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\navCart.js":"24","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\navSearch.js":"25","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\orderList.js":"26","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\orderMenu.js":"27","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\lib\\dbConnect.js":"28","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\lib\\mongodb.js":"29"},{"size":9186,"mtime":1663066064440,"results":"30","hashOfConfig":"31"},{"size":2963,"mtime":1663227707524,"results":"32","hashOfConfig":"31"},{"size":4145,"mtime":1663239301601,"results":"33","hashOfConfig":"31"},{"size":5315,"mtime":1663066714412,"results":"34","hashOfConfig":"31"},{"size":14072,"mtime":1663240301307,"results":"35","hashOfConfig":"31"},{"size":7592,"mtime":1663230191606,"results":"36","hashOfConfig":"31"},{"size":3479,"mtime":1663079244408,"results":"37","hashOfConfig":"31"},{"size":3194,"mtime":1663093070256,"results":"38","hashOfConfig":"31"},{"size":10522,"mtime":1663224351918,"results":"39","hashOfConfig":"31"},{"size":10021,"mtime":1663096078031,"results":"40","hashOfConfig":"31"},{"size":2123,"mtime":1654324241384,"results":"41","hashOfConfig":"31"},{"size":1286,"mtime":1663081363287,"results":"42","hashOfConfig":"31"},{"size":1595,"mtime":1659098451445,"results":"43","hashOfConfig":"31"},{"size":7673,"mtime":1663168091303,"results":"44","hashOfConfig":"31"},{"size":1637,"mtime":1663049273793,"results":"45","hashOfConfig":"31"},{"size":240,"mtime":1662993077430,"results":"46","hashOfConfig":"31"},{"size":16674,"mtime":1663182920699,"results":"47","hashOfConfig":"31"},{"size":3756,"mtime":1658157389745,"results":"48","hashOfConfig":"31"},{"size":1771,"mtime":1652973800816,"results":"49","hashOfConfig":"31"},{"size":8522,"mtime":1663049847178,"results":"50","hashOfConfig":"31"},{"size":2391,"mtime":1663049590290,"results":"51","hashOfConfig":"31"},{"size":12495,"mtime":1663066797567,"results":"52","hashOfConfig":"31"},{"size":13717,"mtime":1663048331592,"results":"53","hashOfConfig":"31"},{"size":4761,"mtime":1663182279403,"results":"54","hashOfConfig":"31"},{"size":3690,"mtime":1663661989101,"results":"55","hashOfConfig":"31"},{"size":7400,"mtime":1662985147963,"results":"56","hashOfConfig":"31"},{"size":8985,"mtime":1663661545426,"results":"57","hashOfConfig":"31"},{"size":679,"mtime":1659527984877,"results":"58","hashOfConfig":"31"},{"size":1101,"mtime":1653824792808,"results":"59","hashOfConfig":"31"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},"zqs9i6",{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"67","messages":"68","suppressedMessages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74"},{"filePath":"75","messages":"76","suppressedMessages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","suppressedMessages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86"},{"filePath":"87","messages":"88","suppressedMessages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","suppressedMessages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","suppressedMessages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","suppressedMessages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","suppressedMessages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","suppressedMessages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","suppressedMessages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"108"},{"filePath":"109","messages":"110","suppressedMessages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","suppressedMessages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","suppressedMessages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119"},{"filePath":"120","messages":"121","suppressedMessages":"122","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123"},{"filePath":"124","messages":"125","suppressedMessages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127"},{"filePath":"128","messages":"129","suppressedMessages":"130","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"131"},{"filePath":"132","messages":"133","suppressedMessages":"134","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","suppressedMessages":"137","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"138"},{"filePath":"139","messages":"140","suppressedMessages":"141","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142"},{"filePath":"143","messages":"144","suppressedMessages":"145","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146"},{"filePath":"147","messages":"148","suppressedMessages":"149","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"150","messages":"151","suppressedMessages":"152","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"153"},{"filePath":"154","messages":"155","suppressedMessages":"156","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157"},{"filePath":"158","messages":"159","suppressedMessages":"160","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"161","messages":"162","suppressedMessages":"163","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\category.js",["164"],[],"import axios from \"axios\";\r\nimport { useEffect, useState } from \"react\";\r\nimport AdminLayout from \"../../layout/adminLayout/adminLayout\";\r\n\r\nAdminCategories.getLayout = function getLayout(page) {\r\n  return <AdminLayout>{page}</AdminLayout>;\r\n};\r\n\r\nAdminCategories.auth = true;\r\nAdminCategories.authOptions = {\r\n  role: \"admin\",\r\n};\r\n\r\nexport default function AdminCategories() {\r\n  const [editCategoryInput, setEditCategoryInput] = useState({\r\n    id: \"\",\r\n    categoryName: \"\",\r\n  });\r\n\r\n  async function addCategory(e) {\r\n    e.preventDefault();\r\n\r\n    let categoryResult = \"\";\r\n\r\n    const addCategoryName = document.getElementById(\"addCategoryName\").value;\r\n    // console.log(addCategoryName.length);\r\n\r\n    if (addCategoryName.length > 0) {\r\n      await axios\r\n        .post(\"http://localhost:3000/api/postCategory\", {\r\n          categoryName: addCategoryName,\r\n          operation: \"create\",\r\n          operationType: \"addCategory\",\r\n        })\r\n        .then(async (response) => {\r\n          const res = await response.data;\r\n          // console.log(res.result);\r\n          categoryResult = res;\r\n        });\r\n\r\n      searchCategory();\r\n    } else {\r\n    }\r\n  }\r\n\r\n  // Search category by name\r\n  async function searchCategory() {\r\n    const categoryName = document.getElementById(\"searchCategory\").value;\r\n\r\n    let Result = \"\";\r\n    let categoryResult = \"\";\r\n\r\n    // Fetch Categories\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postCategory\", {\r\n        categoryName,\r\n        operation: \"read\",\r\n        operationType: \"search\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        categoryResult = res;\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        console.log(error);\r\n      });\r\n\r\n    // Set categories\r\n    categoryResult.result.forEach((result) => {\r\n      Result += `<div class=\"card-text d-flex\" style=\"cursor: pointer\">\r\n        <p class=\"d-inline-block\" data-id=\"${result._id}\">${result.name} </p><button type=\"button\" class=\"btn-close ms-auto\" aria-label=\"Close\"></button>\r\n        </div>`;\r\n      // console.log(result);\r\n    });\r\n\r\n    // Display categories\r\n    document.getElementById(\"searchCategoryResult\").innerHTML = Result;\r\n\r\n    // get clickable buttons\r\n    const getCategories = [].slice.call(\r\n      document.querySelectorAll(\".card-text > p\")\r\n    );\r\n\r\n    // Set what happens after button is clicked\r\n    getCategories.forEach((category) => {\r\n      category.addEventListener(\"click\", () => {\r\n        // Set category data in editCategoryInput state\r\n        setEditCategoryInput({\r\n          id: category.getAttribute(\"data-id\"),\r\n          categoryName: category.innerText,\r\n        });\r\n        // console.log(editCategoryInput);\r\n\r\n        // Set category data in edit modal\r\n        document.getElementById(\"editCategoryName\").value = category.innerText;\r\n\r\n        const bootstrap = require(\"bootstrap/dist/js/bootstrap.js\");\r\n\r\n        const editModalEl = document.getElementById(\"editCategoryModal\");\r\n        const editModal = bootstrap.Modal.getOrCreateInstance(editModalEl);\r\n        editModal.show();\r\n      });\r\n    });\r\n\r\n    // Get delete button\r\n    const getCategoriesDelete = [].slice.call(\r\n      document.querySelectorAll(\".card-text > .btn-close\")\r\n    );\r\n\r\n    // Set what happens after Delete Category Button clicked\r\n    getCategoriesDelete.forEach((deleteButton) => {\r\n      // Get category ID\r\n      const cat_id = deleteButton.parentElement\r\n        .querySelector(\"p\")\r\n        .getAttribute(\"data-id\");\r\n\r\n      // Delete category function runs after button is clicked\r\n      deleteButton.addEventListener(\"click\", () => {\r\n        deleteCategory(cat_id);\r\n      });\r\n    });\r\n  }\r\n\r\n  // Handle Edit Category Form Submit\r\n  async function editCategory(e) {\r\n    e.preventDefault();\r\n\r\n    let categoryResult = \"\";\r\n\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postCategory\", {\r\n        ...editCategoryInput,\r\n        operation: \"update\",\r\n        operationType: \"updateCategory\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        categoryResult = res;\r\n\r\n        // console.log(categoryResult);\r\n      });\r\n\r\n    // Refresh form after submit\r\n    searchCategory();\r\n  }\r\n\r\n  async function deleteCategory(id) {\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postCategory\", {\r\n        id,\r\n        operation: \"delete\",\r\n        operationType: \"deleteCategory\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        console.log(res);\r\n        categoryResult = res;\r\n      });\r\n\r\n    // Refresh after category is deleted\r\n    searchCategory();\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Load all categories\r\n    searchCategory();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      {/* Edit Category Modal */}\r\n      <div className=\"modal fade\" id=\"editCategoryModal\" aria-hidden=\"true\">\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">Edit Category</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container-fluid\">\r\n                <form>\r\n                  <div className=\"mb-3 row\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"editCategoryName\"\r\n                      id=\"editCategoryName\"\r\n                      placeholder=\"Category Name\"\r\n                      onChange={(e) => {\r\n                        setEditCategoryInput({\r\n                          ...editCategoryInput,\r\n                          categoryName: e.target.value,\r\n                        });\r\n                      }}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-orange w-100\"\r\n                      onClick={editCategory}\r\n                    >\r\n                      Edit Category\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Add Category Modal */}\r\n      <div\r\n        className=\"modal fade\"\r\n        id=\"addCategoryModal\"\r\n        tabIndex=\"-1\"\r\n        role=\"dialog\"\r\n        aria-labelledby=\"modelTitleId\"\r\n        aria-hidden=\"true\"\r\n      >\r\n        <div className=\"modal-dialog\" role=\"document\">\r\n          <div className=\"modal-content\">\r\n            <div className=\"modal-header\">\r\n              <h5 className=\"modal-title\">Add Category</h5>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn-close\"\r\n                data-bs-dismiss=\"modal\"\r\n                aria-label=\"Close\"\r\n              ></button>\r\n            </div>\r\n            <div className=\"modal-body\">\r\n              <div className=\"container\">\r\n                <form>\r\n                  <div className=\"mb-3 row\">\r\n                    {/* <label className=\"mb-2\" for=\"addCategoryName\">\r\n                      Category Name\r\n                    </label> */}\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"addCategoryName\"\r\n                      id=\"addCategoryName\"\r\n                      placeholder=\"Category Name\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3 row\">\r\n                    <button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-orange w-100\"\r\n                      onClick={addCategory}\r\n                    >\r\n                      Save\r\n                    </button>\r\n                  </div>\r\n                </form>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          {/* Button trigger modal */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-orange w-100 mb-3\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addCategoryModal\"\r\n          >\r\n            Add Category\r\n          </button>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"searchCategory\" className=\"form-label\">\r\n              Category Search\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchCategory\"\r\n              id=\"searchCategory\"\r\n              aria-describedby=\"helpId\"\r\n              placeholder=\"Search Categories\"\r\n              onChange={searchCategory}\r\n            />\r\n          </div>\r\n          <hr />\r\n          <div id=\"searchCategoryResult\"></div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\dashboard.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\index.js",["165","166"],[],"import Head from \"next/head\";\r\nimport { useState } from \"react\";\r\nimport { useSession, signIn } from \"next-auth/react\";\r\n\r\nexport default function AdminLogin() {\r\n  const { data: session } = useSession();\r\n\r\n  const [formInput, setFormInput] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n\r\n  if (session) {\r\n    console.log(session);\r\n  }\r\n\r\n  // Update formInput after input field change\r\n  function handelInput(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n\r\n    const value = target.value;\r\n\r\n    setFormInput({\r\n      ...formInput,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  // Login admin after checking his credentials\r\n  function adminLogin(e) {\r\n    e.preventDefault();\r\n\r\n    signIn(\"credentials\", {\r\n      ...formInput,\r\n      role: \"admin\",\r\n      callbackUrl: \"/admin/dashboard\",\r\n    }).then(async (result) => {\r\n      // Check for errors if any\r\n\r\n      // Errors Array\r\n      const errors = {\r\n        Signin: \"Try signing with a different account.\",\r\n        OAuthSignin: \"Try signing with a different account.\",\r\n        OAuthCallback: \"Try signing with a different account.\",\r\n        OAuthCreateAccount: \"Try signing with a different account.\",\r\n        EmailCreateAccount: \"Try signing with a different account.\",\r\n        Callback: \"Try signing with a different account.\",\r\n        OAuthAccountNotLinked:\r\n          \"To confirm your identity, sign in with the same account you used originally.\",\r\n        EmailSignin: \"Check your email address.\",\r\n        CredentialsSignin:\r\n          \"Sign in failed. Check the details you provided are correct.\",\r\n        default: \"Unable to sign in.\",\r\n      };\r\n      // console.log(result);\r\n\r\n      // If errors were found\r\n      if (result.error) {\r\n        // check if error exists in error array\r\n        if (errors[error]) {\r\n          // display error if in array\r\n          toast.error(errors[error]);\r\n        } else {\r\n          // display my custom error set in backend\r\n          const error = result.error;\r\n          error.split(\",\").forEach((err) => {\r\n            toast.error(err);\r\n          });\r\n        }\r\n        // console.log(error);\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container-fluid bg-orange h-100\">\r\n      <Head>\r\n        <title>Admin Login</title>\r\n      </Head>\r\n\r\n      <div className=\"row h-100\">\r\n        <div className=\"card col-4 m-auto\" style={{ height: \"400px\" }}>\r\n          <img src=\"./Fast_Food_Logo.png\" className=\"img-fluid pt-5 p-4\" />\r\n          <div className=\"card-body\">\r\n            <form>\r\n              <div className=\"mb-3\">\r\n                <label\r\n                  htmlFor=\"email\"\r\n                  className=\"col-12 ps-2 pb-1 text-black-50\"\r\n                >\r\n                  E-mail\r\n                </label>\r\n                <div className=\"col-12\">\r\n                  <input\r\n                    type=\"email\"\r\n                    className=\"form-control rounded-pill\"\r\n                    name=\"email\"\r\n                    id=\"email\"\r\n                    onChange={handelInput}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-3\">\r\n                <label\r\n                  htmlFor=\"password\"\r\n                  className=\"col-12 ps-2 pb-1 text-black-50\"\r\n                >\r\n                  Password\r\n                </label>\r\n                <div className=\"col-12\">\r\n                  <input\r\n                    type=\"password\"\r\n                    className=\"form-control rounded-pill\"\r\n                    name=\"password\"\r\n                    id=\"pass\"\r\n                    onChange={handelInput}\r\n                  />\r\n                </div>\r\n              </div>\r\n              <div className=\"mb-5\">\r\n                <div className=\"col-sm-10\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-orange\"\r\n                    onClick={adminLogin}\r\n                  >\r\n                    Submit\r\n                  </button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\items.js",["167"],[],"import AdminLayout from \"../../layout/adminLayout/adminLayout\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport ItemAdd from \"../../components/adminItems/itemsModal-Add\";\r\nimport ItemEdit from \"../../components/adminItems/itemsModal-Edit\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash, faEdit } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nAdminItems.getLayout = function getLayout(page) {\r\n  return <AdminLayout>{page}</AdminLayout>;\r\n};\r\n\r\nAdminItems.auth = true;\r\nAdminItems.authOptions = {\r\n  role: \"admin\",\r\n};\r\n\r\nexport default function AdminItems() {\r\n  // console.log(options);\r\n\r\n  const [menuItems, setMenuItems] = useState();\r\n  const [editModal, setEditModal] = useState(\"\");\r\n\r\n  // Search for items by name\r\n  async function searchItem() {\r\n    const itemName = document.getElementById(\"searchItem\").value;\r\n\r\n    const items = await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        itemName,\r\n        operation: \"read\",\r\n        operationType: \"search\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        return res.result;\r\n      })\r\n\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        console.log(error.data);\r\n      });\r\n\r\n    // Set menuItems state\r\n    setMenuItems(items);\r\n  }\r\n\r\n  // Delete a item\r\n  async function deleteItem(itemID) {\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        itemID,\r\n        operation: \"delete\",\r\n        operationType: \"deleteItem\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        if (res.success) {\r\n          toast.success(res.success);\r\n\r\n          // Refresh item menu\r\n          searchItem();\r\n        }\r\n      })\r\n\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        // console.log(error.data);\r\n        if (error.data) {\r\n          toast.error(error.data.error);\r\n        }\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    // Load all menu items\r\n    searchItem();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <ItemAdd target=\"addItemModal\" searchItem={searchItem} />\r\n      <ItemEdit\r\n        target=\"editItemModal\"\r\n        searchItem={searchItem}\r\n        dataID={editModal}\r\n      />\r\n\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          {/* Button trigger modal */}\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn-orange w-100 mb-3\"\r\n            data-bs-toggle=\"modal\"\r\n            data-bs-target=\"#addItemModal\"\r\n          >\r\n            Add Item\r\n          </button>\r\n\r\n          <div className=\"mb-3\">\r\n            <label htmlFor=\"searchItem\" className=\"form-label\">\r\n              Item Search\r\n            </label>\r\n            <input\r\n              type=\"text\"\r\n              className=\"form-control\"\r\n              name=\"searchItem\"\r\n              id=\"searchItem\"\r\n              aria-describedby=\"helpId\"\r\n              placeholder=\"Search Items\"\r\n              onChange={searchItem}\r\n            />\r\n          </div>\r\n          <hr />\r\n          <div className=\"row\">\r\n            {menuItems &&\r\n              menuItems.map((item, index) => (\r\n                // console.log(item)\r\n                <div key={index} className=\"col-6\">\r\n                  <div className=\"card mb-3 shadow editItem\">\r\n                    <div className=\"row g-0\">\r\n                      <div className=\"col-md-4 p-2\">\r\n                        <img\r\n                          src={\"/uploads/\" + item.image}\r\n                          className=\"img-fluid rounded-start\"\r\n                          alt=\"...\"\r\n                          style={{ maxHeight: \"152.8px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title d-flex\">\r\n                            <div className=\"\">\r\n                              {item.name.charAt(0).toUpperCase() +\r\n                                item.name.slice(1)}\r\n                            </div>\r\n                            <button\r\n                              className=\"btn btn-primary ms-auto me-1\"\r\n                              data-bs-toggle=\"modal\"\r\n                              data-bs-target=\"#editItemModal\"\r\n                              onClick={() => setEditModal(item._id)}\r\n                            >\r\n                              <FontAwesomeIcon icon={faEdit} />\r\n                            </button>\r\n                            <button\r\n                              className=\"btn btn-danger\"\r\n                              onClick={() => deleteItem(item._id)}\r\n                            >\r\n                              <FontAwesomeIcon icon={faTrash} />\r\n                            </button>\r\n                          </h5>\r\n                          <hr />\r\n                          <p className=\"card-text\">{item.description}</p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\orders.js",["168","169"],[],"import {\r\n  faClock,\r\n  faFireBurner,\r\n  faRoad,\r\n  faHouseCircleCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport AdminLayout from \"../../layout/adminLayout/adminLayout\";\r\n\r\nAdminOrders.getLayout = function getLayout(page) {\r\n  return <AdminLayout>{page}</AdminLayout>;\r\n};\r\n\r\nAdminOrders.auth = true;\r\nAdminOrders.authOptions = {\r\n  role: \"admin\",\r\n};\r\n\r\nexport default function AdminOrders() {\r\n  const [orders, setOrders] = useState([]);\r\n  const [userSearch, setUserSearch] = useState(\"\");\r\n\r\n  const [selectOptions, setSelectOptions] = useState();\r\n\r\n  // Get users and set them in a search select from where yo can select them by name\r\n  async function onSelectInput() {\r\n    const users = await axios\r\n      .post(\"http://localhost:3000/api/postUser\", {\r\n        operation: \"read\",\r\n        operationType: \"getAllUsers\",\r\n      })\r\n      .then(async (response) => {\r\n        let result = [];\r\n\r\n        const res = await response.data;\r\n        res.result.forEach((user) => {\r\n          result.push({ value: user._id, label: user.username });\r\n        });\r\n        return result;\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n      });\r\n    setSelectOptions(users);\r\n    // console.log(selectOptions);\r\n  }\r\n\r\n  // Search for order by name\r\n  async function searchOrder() {\r\n    const orderSort = document.getElementById(\"selectOrderSort\").value;\r\n\r\n    const orderItems = await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        userSearch,\r\n        orderSort,\r\n        operation: \"read\",\r\n        operationType: \"getAllOrders\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        console.log(res);\r\n        return res.result;\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n      });\r\n\r\n    orderItems.forEach((order) => {\r\n      let total = 0;\r\n      order.items.forEach((item) => {\r\n        total +=\r\n          parseInt(item.itemInfo.price[item.itemSize]) * item.itemQuantity;\r\n      });\r\n      order.total = total;\r\n    });\r\n    // set orders for display\r\n    setOrders(orderItems);\r\n  }\r\n\r\n  // Change the status for the order\r\n  async function changeStatus(e) {\r\n    const orderID = e.target.getAttribute(\"data-id\");\r\n    const orderStatus = e.target.value;\r\n\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        orderID,\r\n        orderStatus,\r\n        operation: \"update\",\r\n        operationType: \"updateStatus\",\r\n      })\r\n      .then(() => {\r\n        searchOrder();\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n      });\r\n  }\r\n\r\n  useEffect(() => {\r\n    onSelectInput();\r\n    searchOrder();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"row mb-3\">\r\n            <div className=\"col-7\">\r\n              {/* <input\r\n                type=\"text\"\r\n                className=\"form-control\"\r\n                id=\"searchOrders\"\r\n                placeholder=\"Search Orders\"\r\n                onKeyDown={(e) => {\r\n                  if (e.key == \"Enter\") {\r\n                    selectOrderType();\r\n                    console.log(\"enter pressed\");\r\n                  }\r\n                }}\r\n              /> */}\r\n              <Select\r\n                onChange={(e) => setUserSearch(e)}\r\n                options={selectOptions}\r\n                hideSelectedOptions={true}\r\n                placeholder=\"Search...\"\r\n              />\r\n            </div>\r\n            <div className=\"col-1 p-0\">\r\n              <button className=\"btn btn-orange w-100\" onClick={searchOrder}>\r\n                Search\r\n              </button>\r\n            </div>\r\n            <div className=\"col-4\">\r\n              <select\r\n                className=\"form-select\"\r\n                id=\"selectOrderSort\"\r\n                defaultValue={\"all\"}\r\n              >\r\n                <option value=\"all\">All</option>\r\n                <option value=\"pending\">Pending</option>\r\n                <option value=\"complete\">Complete</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n          {orders &&\r\n            orders.map((order, orderIndex) => (\r\n              <div key={orderIndex} className=\"accordion\" id=\"itemAccordion\">\r\n                <div className=\"accordion-item\">\r\n                  <h2 className=\"accordion-header\" id=\"headingOne\">\r\n                    <button\r\n                      className=\"accordion-button collapsed\"\r\n                      type=\"button\"\r\n                      data-bs-toggle=\"collapse\"\r\n                      data-bs-target={\"#collapse-\" + orderIndex}\r\n                      aria-expanded=\"true\"\r\n                    >\r\n                      {order.user && order.user.username}\r\n                    </button>\r\n                  </h2>\r\n                  <div\r\n                    id={\"collapse-\" + orderIndex}\r\n                    className=\"accordion-collapse collapse\"\r\n                    data-bs-parent=\"#itemAccordion\"\r\n                  >\r\n                    <div className=\"accordion-body\">\r\n                      <div className=\"row\">\r\n                        <div className=\"col-12 my-4\">\r\n                          <div className=\"row text-center\">\r\n                            <div className=\"col-3 d-flex justify-content-center align-items-center p-0\">\r\n                              <div\r\n                                style={{\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                              <FontAwesomeIcon\r\n                                icon={faClock}\r\n                                className=\"icon fs-3 pe-2\"\r\n                                style={\r\n                                  order.status === \"accepted\" && {\r\n                                    color: \"orange\",\r\n                                  }\r\n                                }\r\n                              />\r\n                              <div\r\n                                style={{\r\n                                  border: \"1px dashed #000\",\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col-3 d-flex justify-content-center align-items-center ps-1 p-0\">\r\n                              <div\r\n                                style={{\r\n                                  border: \"1px dashed #000\",\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                              <FontAwesomeIcon\r\n                                icon={faFireBurner}\r\n                                className=\"icon fs-3 px-2\"\r\n                                style={\r\n                                  order.status === \"oven\" && {\r\n                                    color: \"orange\",\r\n                                  }\r\n                                }\r\n                              />\r\n                              <div\r\n                                style={{\r\n                                  border: \"1px dashed #000\",\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col-3 d-flex justify-content-center align-items-center ps-1 p-0\">\r\n                              <div\r\n                                style={{\r\n                                  border: \"1px dashed #000\",\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                              <FontAwesomeIcon\r\n                                icon={faRoad}\r\n                                className=\"icon fs-3 px-2\"\r\n                                style={\r\n                                  order.status === \"on its way\" && {\r\n                                    color: \"orange\",\r\n                                  }\r\n                                }\r\n                              />\r\n                              <div\r\n                                style={{\r\n                                  border: \"1px dashed #000\",\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                            <div className=\"col-3 d-flex justify-content-center align-items-center ps-1 p-0\">\r\n                              <div\r\n                                style={{\r\n                                  border: \"1px dashed #000\",\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                              <FontAwesomeIcon\r\n                                icon={faHouseCircleCheck}\r\n                                className=\"icon fs-3 px-2\"\r\n                                style={\r\n                                  order.status === \"delivered\" && {\r\n                                    color: \"orange\",\r\n                                  }\r\n                                }\r\n                              />\r\n                              <div\r\n                                style={{\r\n                                  width: \"50%\",\r\n                                }}\r\n                              ></div>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12 mb-4\">\r\n                          <div className=\"card\">\r\n                            <div className=\"card-body\">\r\n                              <h4 className=\"card-title\">\r\n                                Total Rs: {order.total}\r\n                              </h4>\r\n                              <select\r\n                                className=\"form-select\"\r\n                                data-id={order._id}\r\n                                onChange={changeStatus}\r\n                                value={order.status}\r\n                              >\r\n                                <option value=\"pending\">Pending</option>\r\n                                <option value=\"accepted\">Accepted</option>\r\n                                <option value=\"oven\">In the Oven</option>\r\n                                <option value=\"on its way\">On Its Way</option>\r\n                                <option value=\"delivered\">Delivered</option>\r\n                                <option value=\"canceled\">Canceled</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"col-12\">\r\n                          <div key={orderIndex} className=\"list-group mb-4\">\r\n                            {order.items.map((item, itemIndex) => (\r\n                              <div\r\n                                key={itemIndex}\r\n                                className=\"list-group-item list-group-item-action p-0 ps-3\"\r\n                                aria-current=\"true\"\r\n                              >\r\n                                <div className=\"row text-center\">\r\n                                  <div className=\"col-2 d-flex justify-content-center align-items-center\">\r\n                                    <img\r\n                                      src={\"/uploads/\" + item.itemInfo.image}\r\n                                      className=\"img-fluid\"\r\n                                      alt=\"\"\r\n                                      style={{ maxWidth: \"72px\" }}\r\n                                    />\r\n                                  </div>\r\n\r\n                                  <div className=\"col-3 p-3 border-start\">\r\n                                    <h5>Price</h5>\r\n                                    <p>\r\n                                      Rs:{\" \"}\r\n                                      {Object.entries(item.itemInfo.price).map(\r\n                                        ([size, price]) => {\r\n                                          if (size == item.itemSize) {\r\n                                            return price;\r\n                                          }\r\n                                        }\r\n                                      )}\r\n                                    </p>\r\n                                  </div>\r\n\r\n                                  <div className=\"col-3 p-3 border-start\">\r\n                                    <h5>Quantity</h5>\r\n                                    <p>{item.itemQuantity}</p>\r\n                                  </div>\r\n\r\n                                  <div className=\"col-3 p-3 border-start\">\r\n                                    <h5>Total</h5>\r\n                                    <p>\r\n                                      Rs:{\" \"}\r\n                                      {Object.entries(item.itemInfo.price).map(\r\n                                        ([size, price]) => {\r\n                                          if (size == item.itemSize) {\r\n                                            return price * item.itemQuantity;\r\n                                          }\r\n                                        }\r\n                                      )}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            ))}\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            ))}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\admin\\profile.js",["170"],[],"import { useState } from \"react\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport AdminLayout from \"../../layout/adminLayout/adminLayout\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nAdminProfile.auth = true;\r\nAdminProfile.authOptions = {\r\n  role: \"admin\",\r\n};\r\n\r\nAdminProfile.getLayout = function getLayout(page) {\r\n  return <AdminLayout>{page}</AdminLayout>;\r\n};\r\n\r\nexport default function AdminProfile() {\r\n  const { data: session } = useSession();\r\n\r\n  // console.log(session);\r\n  const [formInput, setFormInput] = useState({\r\n    image: \"\",\r\n    username: session.user.username,\r\n    email: session.user.email,\r\n    address: session.user.address,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  // Update formInput\r\n  function handleInput(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    setFormInput({\r\n      ...formInput,\r\n      [name]: value,\r\n    });\r\n\r\n    // console.log(formInput);\r\n  }\r\n\r\n  // Set image src and update formInput.image\r\n  async function imageChange(e) {\r\n    const target = e.target;\r\n    const file = target.files[0];\r\n\r\n    if (file) {\r\n      const src = URL.createObjectURL(file);\r\n\r\n      document.getElementById(\"userImage\").src = src;\r\n\r\n      setFormInput({\r\n        ...formInput,\r\n        image: file.name,\r\n        // itemImageFile: src,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Submit profile form\r\n  async function submitUserInfo(e) {\r\n    e.preventDefault();\r\n\r\n    const userID = session.user.id;\r\n    // console.log(session);\r\n\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postUser\", {\r\n        userID,\r\n        ...formInput,\r\n        operation: \"update\",\r\n        operationType: \"updateUser\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = response.data;\r\n        console.log(res);\r\n\r\n        if (res.successes.length > 0) {\r\n          const imageFile = document.getElementById(\"userImageFile\").files[0];\r\n\r\n          // If image is set then upload image\r\n          if (imageFile) {\r\n            let formData = new FormData();\r\n            formData.append(\"image\", imageFile);\r\n            await axios\r\n              .post(\"http://localhost:3000/api/uploadImage\", formData)\r\n              .then((response) => {\r\n                const res = response.data;\r\n                // console.log(res.success);\r\n                toast.success(res.success);\r\n              })\r\n              .catch((err) => {\r\n                const error = err.response.data;\r\n                // console.log(error);\r\n                toast.error(error);\r\n              });\r\n          }\r\n\r\n          toast.success(res.success);\r\n        }\r\n\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        // console.log(err);\r\n        toast.error(error);\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"container\">\r\n            <h4 className=\"card-title mb-4\">User Info:</h4>\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <label\r\n                  className=\"h-100 w-100\"\r\n                  htmlFor=\"userImageFile\"\r\n                  // style={{ border: \"2px solid black\" }}\r\n                >\r\n                  <img\r\n                    src={\r\n                      session.user.image\r\n                        ? \"/uploads/\" + session.user.image\r\n                        : \"/images/No_Image_Available.jpg\"\r\n                    }\r\n                    className=\"img-fluid\"\r\n                    alt=\"\"\r\n                    id=\"userImage\"\r\n                  />\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control d-none\"\r\n                  name=\"userImageFile\"\r\n                  id=\"userImageFile\"\r\n                  placeholder=\"User Image\"\r\n                  aria-describedby=\"fileHelpId\"\r\n                  onChange={imageChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-9\">\r\n                <div className=\"mb-3 row\">\r\n                  <label htmlFor=\"username\" className=\"col-xs-4 col-form-label\">\r\n                    Name\r\n                  </label>\r\n                  <div className=\"col-xs-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"username\"\r\n                      id=\"username\"\r\n                      placeholder=\"Name\"\r\n                      value={formInput.username}\r\n                      onChange={handleInput}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3 row\">\r\n                  <label htmlFor=\"email\" className=\"col-xs-4 col-form-label\">\r\n                    E-mail\r\n                  </label>\r\n                  <div className=\"col-xs-8\">\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"E-mail\"\r\n                      value={formInput.email}\r\n                      onChange={handleInput}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"mb-3 row\">\r\n                      <label\r\n                        htmlFor=\"password\"\r\n                        className=\"col-xs-4 col-form-label\"\r\n                      >\r\n                        Password\r\n                      </label>\r\n                      <div className=\"col-xs-8\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          placeholder=\"Password\"\r\n                          value={formInput.password}\r\n                          onChange={handleInput}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"mb-3 row\">\r\n                      <label\r\n                        htmlFor=\"confirmPassword\"\r\n                        className=\"col-xs-4 col-form-label\"\r\n                      >\r\n                        Confirm Password\r\n                      </label>\r\n                      <div className=\"col-xs-8\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          name=\"confirmPassword\"\r\n                          id=\"confirmPassword\"\r\n                          placeholder=\"Confirm Password\"\r\n                          value={formInput.confirmPassword}\r\n                          onChange={handleInput}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-orange w-100\"\r\n                onClick={submitUserInfo}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\auth\\[...nextauth].js",["171"],[],"import NextAuth from \"next-auth\";\r\nimport CredentialsProvider from \"next-auth/providers/credentials\";\r\nimport axios from \"axios\";\r\nimport { MongoDBAdapter } from \"@next-auth/mongodb-adapter\";\r\n// import dbConnect from \"../../../lib/dbConnect\";\r\nimport clientPromise from \"../../../lib/mongodb.js\";\r\n\r\nexport default (req, res) =>\r\n  NextAuth(req, res, {\r\n    // adapter: MongoDBAdapter(clientPromise),\r\n\r\n    providers: [\r\n      CredentialsProvider({\r\n        // The name to display on the sign in form (e.g. 'Sign in with...')\r\n        name: \"Login\",\r\n        // The credentials is used to generate a suitable form on the sign in page.\r\n        // You can specify whatever fields you are expecting to be submitted.\r\n        // e.g. domain, username, password, 2FA token, etc.\r\n        // You can pass any HTML attribute to the <input> tag through the object.\r\n        credentials: {\r\n          email: { label: \"Email\", type: \"email\" },\r\n          password: { label: \"Password\", type: \"password\" },\r\n        },\r\n        async authorize(credentials, req) {\r\n          // console.log(credentials);\r\n\r\n          // Send the login credentials to the login api and get the response back\r\n          const user = await axios\r\n            .post(\"http://localhost:3000/api/postUser\", {\r\n              ...credentials,\r\n              operation: \"read\",\r\n              operationType: \"userLogin\",\r\n            })\r\n            .then(async (response) => {\r\n              const res = await response.data;\r\n              return res;\r\n            })\r\n            .catch((err) => {\r\n              const error = err.response.data;\r\n              // Throw custom error\r\n              throw new Error(error);\r\n            });\r\n\r\n          // if credentials were verified then send return them\r\n          if (user) {\r\n            return user.result;\r\n          }\r\n        },\r\n      }),\r\n    ],\r\n    // if errors were send then send them to the directed links\r\n    pages: {\r\n      signIn: \"/authError\",\r\n      error: \"/authError\",\r\n    },\r\n    // Set session type\r\n    session: {\r\n      jwt: true,\r\n      strategy: \"jwt\",\r\n    },\r\n    // Set Callbacks\r\n    callbacks: {\r\n      // Set the jwt tokens\r\n      async jwt({ token, user, account, profile }) {\r\n        if (account && user) {\r\n          return {\r\n            ...token,\r\n            accessToken: user.data.token,\r\n            refreshToken: user.data.refreshToken,\r\n          };\r\n        }\r\n\r\n        return token;\r\n      },\r\n      // Set the session\r\n      async session({ session, user, token }) {\r\n        // Get user info\r\n        const webUser = await axios\r\n          .post(\"http://localhost:3000/api/postUser\", {\r\n            email: session.user.email,\r\n            operation: \"read\",\r\n            operationType: \"userInfo\",\r\n          })\r\n          .then(async (response) => {\r\n            const res = await response.data;\r\n            // console.log(res);\r\n            return res.result;\r\n          })\r\n          .catch((err) => {\r\n            const error = err.response;\r\n            console.log(err);\r\n          });\r\n\r\n        if (webUser) {\r\n          // console.log(webUser);\r\n\r\n          // Set all the session info about the user\r\n          session.user.id = webUser._id;\r\n          session.user.image = webUser.image;\r\n          session.user.username = webUser.username;\r\n          session.user.address = webUser.address;\r\n          session.user.role = webUser.role;\r\n        }\r\n        return session;\r\n      },\r\n    },\r\n  });\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\postCategory.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\postItems.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\postUser.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\signupUser.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\api\\uploadImage.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\authError.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\checkout.js",["172"],[],"import Layout from \"../layout/Layout\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  cartItems,\r\n  itemsCount,\r\n  itemsTotal,\r\n  removeItem,\r\n} from \"../redux/cartSlice\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport axios from \"axios\";\r\nimport { useRouter } from \"next/router\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nCheckout.getLayout = function getLayout(page) {\r\n  return <Layout>{page}</Layout>;\r\n};\r\n\r\nexport default function Checkout() {\r\n  const { data: session } = useSession();\r\n\r\n  const router = useRouter();\r\n\r\n  const items = useSelector(cartItems);\r\n  const cartCount = useSelector(itemsCount);\r\n  const cartTotal = useSelector(itemsTotal);\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(session);\r\n  async function verifyCheckoutDetails() {\r\n    var bootstrap = require(\"bootstrap/dist/js/bootstrap\");\r\n\r\n    if (session && session.user.role != \"admin\") {\r\n      const loginModal = bootstrap.Modal.getOrCreateInstance(\r\n        document.getElementById(\"modelCheckoutDetails\")\r\n      );\r\n      loginModal.show();\r\n      // console.log(session);\r\n    } else {\r\n      toast.info(\"Login to checkout\");\r\n      const loginModal = bootstrap.Modal.getOrCreateInstance(\r\n        document.getElementById(\"modelSignup_Login\")\r\n      );\r\n      loginModal.show();\r\n      // console.log(session);\r\n    }\r\n  }\r\n\r\n  async function itemsCheckout() {\r\n    const userID = session.user.id;\r\n    const address = document.getElementById(\"inputAddress\").value;\r\n\r\n    var bootstrap = require(\"bootstrap/dist/js/bootstrap\");\r\n\r\n    if (session) {\r\n      if (address.length < 1) {\r\n      } else {\r\n        const orderResult = await axios\r\n          .post(\"http://localhost:3000/api/postItems\", {\r\n            userID,\r\n            items,\r\n            address,\r\n            operation: \"create\",\r\n            operationType: \"order\",\r\n          })\r\n          .then(async (response) => {\r\n            const res = await response.data;\r\n            return res;\r\n          })\r\n          .catch((err) => {\r\n            const error = err.response;\r\n            // console.log(error);\r\n          });\r\n\r\n        // console.log(orderResult);\r\n        if (orderResult.success.length > 0) {\r\n          // console.log(orderResult.result.user);\r\n          const loginModal = bootstrap.Modal.getOrCreateInstance(\r\n            document.getElementById(\"modelCheckoutDetails\")\r\n          );\r\n          loginModal.hide();\r\n          router.push(\"/orders/\" + orderResult.result.user);\r\n        }\r\n      }\r\n    } else {\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      {/* Checkout Modal  */}\r\n      {session && (\r\n        <div\r\n          className=\"modal fade\"\r\n          id=\"modelCheckoutDetails\"\r\n          tabIndex=\"-1\"\r\n          role=\"dialog\"\r\n          aria-labelledby=\"modelTitleId\"\r\n          aria-hidden=\"true\"\r\n        >\r\n          <div className=\"modal-dialog\" role=\"document\">\r\n            <div className=\"modal-content\">\r\n              <div className=\"modal-header\">\r\n                <h5 className=\"modal-title\">Order Details</h5>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn-close\"\r\n                  data-bs-dismiss=\"modal\"\r\n                  aria-label=\"Close\"\r\n                ></button>\r\n              </div>\r\n              <div className=\"modal-body\">\r\n                <div className=\"container\">\r\n                  <div className=\"mb-3 row\">\r\n                    <label\r\n                      htmlFor=\"inputAddress\"\r\n                      className=\"col-xs-4 col-form-label\"\r\n                    >\r\n                      Address\r\n                    </label>\r\n                    <div className=\"col-xs-8\">\r\n                      <input\r\n                        type=\"text\"\r\n                        className=\"form-control\"\r\n                        name=\"inputAddress\"\r\n                        id=\"inputAddress\"\r\n                        placeholder=\"Address\"\r\n                        defaultValue={session.user.address}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"modal-footer\">\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-orange\"\r\n                  onClick={itemsCheckout}\r\n                >\r\n                  Checkout\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )}\r\n\r\n      <h2 className=\"display-5 text-center\">Checkout</h2>\r\n      <hr className=\"mb-5\" />\r\n\r\n      <div className=\"row\">\r\n        <div className=\"col-8\">\r\n          <div className=\"list-group\">\r\n            {items &&\r\n              items.map((item, index) => (\r\n                <div\r\n                  key={index}\r\n                  className=\"list-group-item list-group-item-action p-0 ps-3\"\r\n                  aria-current=\"true\"\r\n                >\r\n                  <div className=\"row text-center\">\r\n                    <div className=\"col-2 d-flex justify-content-center align-items-center\">\r\n                      <img\r\n                        src={\"/uploads/\" + item.itemInfo.image}\r\n                        className=\"img-fluid\"\r\n                        alt=\"\"\r\n                        style={{ maxWidth: \"72px\" }}\r\n                      />\r\n                    </div>\r\n\r\n                    <div className=\"col-3 p-3 border-start\">\r\n                      <h5>Price</h5>\r\n                      <p>\r\n                        Rs:{\" \"}\r\n                        {Object.entries(item.itemInfo.price).map(\r\n                          ([size, price]) => {\r\n                            if (size == item.itemSize) {\r\n                              return price;\r\n                            }\r\n                          }\r\n                        )}\r\n                      </p>\r\n                    </div>\r\n\r\n                    <div className=\"col-3 p-3 border-start\">\r\n                      <h5>Quantity</h5>\r\n                      <p>{item.itemQuantity}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-3 p-3 border-start\">\r\n                      <h5>Total</h5>\r\n                      <p>\r\n                        Rs:{\" \"}\r\n                        {Object.entries(item.itemInfo.price).map(\r\n                          ([size, price]) => {\r\n                            if (size == item.itemSize) {\r\n                              return price * item.itemQuantity;\r\n                            }\r\n                          }\r\n                        )}\r\n                      </p>\r\n                    </div>\r\n                    <button\r\n                      onClick={() => dispatch(removeItem(index))}\r\n                      className=\"col-1 btn btn-sm btn-danger border-0 p-0\"\r\n                    >\r\n                      <FontAwesomeIcon icon={faTrash} />\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"col-4\">\r\n          <div className=\"card h-100\">\r\n            <div className=\"card-body\">\r\n              <h4 className=\"offcanvas-title mb-2\" id=\"offcanvasCartLabel\">\r\n                Total: {cartTotal}\r\n              </h4>\r\n              <button\r\n                onClick={verifyCheckoutDetails}\r\n                className=\"btn btn-orange\"\r\n              >\r\n                Checkout\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\index.js",["173","174"],[],"import Head from \"next/head\";\nimport Link from \"next/link\";\nimport Layout from \"../layout/Layout\";\nimport OrderMenu from \"../components/orderMenu\";\n// import * as bootstrap from \"bootstrap\";\n\nHome.getLayout = function getLayout(page) {\n  return <Layout>{page}</Layout>;\n};\n\nexport default function Home() {\n  return (\n    <div>\n      <Head>\n        <title>Restaurant App</title>\n        <meta name=\"description\" content=\"Restaurant App Description\" />\n        <link rel=\"icon\" href=\"/favicon.ico\" />\n      </Head>\n\n      <div className=\"bg-orange text-white p-5 header\">\n        <div className=\"row\">\n          <div className=\"col-7 pt-4\">\n            <h1 className=\"display-4 fw-bold\">Creative Restaurant</h1>\n            <p className=\"lead\">\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati\n              earum consequuntur, voluptatibus officia beatae, corrupti\n              voluptate cumque quisquam asperiores voluptas ex! Quisquam,\n              veritatis ipsa? Dicta eligendi id hic aperiam similique.\n            </p>\n            <Link href=\"/menu\">\n              <a className=\"btn btn-orange btn-lg\" role=\"button\">\n                Check our menu\n              </a>\n            </Link>\n          </div>\n          <div className=\"col-5\">\n            <img src=\"/pizza-1.png\" className=\"img-fluid rounded-start\" />\n          </div>\n        </div>\n      </div>\n\n      <OrderMenu />\n\n      <div className=\"bg-black text-white p-5 text-center\">\n        <h2 className=\"display-4 py-2\">Contact Us</h2>\n        <button className=\"btn btn-orange btn-lg\">021-000-000</button>\n      </div>\n    </div>\n  );\n}\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\menu.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\menuItem\\[menuItem].js",["175","176"],[],"import Head from \"next/head\";\r\nimport Image from \"next/image\";\r\nimport Link from \"next/link\";\r\nimport { useRouter } from \"next/router\";\r\nimport Layout from \"../../layout/Layout\";\r\nimport item_1 from \"../../public/pizza-1.png\";\r\nimport item_2 from \"../../public/pizza-2.png\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faPizzaSlice } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { addProducts, resetCart } from \"../../redux/cartSlice\";\r\nimport OrderMenu from \"../../components/orderMenu\";\r\n\r\nMenuItem.getLayout = function getLayout(page) {\r\n  return <Layout>{page}</Layout>;\r\n};\r\n\r\nexport async function getServerSideProps(ctx) {\r\n  // const router = useRouter();\r\n  // const { menuItem } = router.query;\r\n\r\n  // console.log();\r\n\r\n  const { menuItem } = ctx.params;\r\n\r\n  const itemInfo = await axios\r\n    .post(\"http://localhost:3000/api/postItems\", {\r\n      itemId: menuItem,\r\n      operation: \"read\",\r\n      operationType: \"findOne\",\r\n    })\r\n    .then(async (response) => {\r\n      const res = await response.data;\r\n      // console.log(res);\r\n      return res.result;\r\n    })\r\n    .catch((err) => {\r\n      const error = err.response;\r\n      console.log(error);\r\n    });\r\n\r\n  // console.log(itemInfo);\r\n\r\n  return {\r\n    props: {\r\n      itemInfo,\r\n    },\r\n  };\r\n}\r\n\r\nexport default function MenuItem({ itemInfo }) {\r\n  const router = useRouter();\r\n\r\n  const menuItemID = router.query.menuItem;\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [item, setItem] = useState(itemInfo);\r\n  const [itemPrice, setItemPrice] = useState(Object.values(itemInfo.price)[0]);\r\n  const [itemSize, setItemSize] = useState(Object.keys(itemInfo.price)[0]);\r\n  const [itemQuantity, setItemQuantity] = useState(1);\r\n  const [addOn, setAddOn] = useState([]);\r\n  // console.log(item);\r\n\r\n  async function updateItem(menuItemID) {\r\n    const newItemInfo = await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        itemId: menuItemID,\r\n        operation: \"read\",\r\n        operationType: \"findOne\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        // console.log(res);\r\n        return res.result;\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        console.log(error);\r\n      });\r\n\r\n    setItem(newItemInfo);\r\n    setItemPrice(Object.values(newItemInfo.price)[0]);\r\n    setItemSize(Object.keys(newItemInfo.price)[0]);\r\n    setItemQuantity(1);\r\n    // console.log(newItemInfo);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (item._id != menuItemID) {\r\n      updateItem(menuItemID);\r\n    }\r\n  }, [menuItemID]);\r\n\r\n  function changeSize(e) {\r\n    if (e.target.value in item.price) {\r\n      setItemPrice(item.price[e.target.value]);\r\n    }\r\n    setItemSize(e.target.value);\r\n  }\r\n\r\n  function quantityIncrease(e) {\r\n    const increase = itemQuantity + 1;\r\n    setItemQuantity(increase);\r\n  }\r\n\r\n  function quantityDecrease(e) {\r\n    let decrease;\r\n    if (itemQuantity > 1) {\r\n      decrease = itemQuantity - 1;\r\n    } else {\r\n      decrease = 1;\r\n    }\r\n    setItemQuantity(decrease);\r\n  }\r\n\r\n  async function addToCart() {\r\n    const myitem = { itemInfo, itemSize, itemQuantity };\r\n\r\n    // console.log(myitem);\r\n    dispatch(addProducts(myitem));\r\n\r\n    // console.log(items);\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Head>\r\n        <title>Create Next App</title>\r\n        <meta name=\"description\" content=\"Generated by create next app\" />\r\n        <link rel=\"icon\" href=\"/favicon.ico\" />\r\n      </Head>\r\n\r\n      <div className=\"bg-orange text-white p-5\">\r\n        <div className=\"row\">\r\n          <div className=\"col-md-5 col-12\">\r\n            <img\r\n              src={\"/uploads/\" + item.image}\r\n              className=\"img-fluid rounded-start\"\r\n              alt=\"...\"\r\n            />\r\n          </div>\r\n          <div className=\"col-md-7 col-12 pt-4\">\r\n            <h1 className=\"display-4 fw-bold\">\r\n              {item.name.charAt(0).toUpperCase() + item.name.slice(1)}\r\n            </h1>\r\n            <p className=\"h2 fw-bold my-2\">Rs: {itemPrice * itemQuantity}</p>\r\n            <p className=\"lead\">\r\n              Lorem ipsum dolor sit amet consectetur adipisicing elit. Obcaecati\r\n              earum consequuntur, voluptatibus officia beatae, corrupti\r\n              voluptate cumque quisquam asperiores voluptas ex! Quisquam.\r\n            </p>\r\n\r\n            <p className=\"h3 mb-3 fw-bold\">Quantity:</p>\r\n            <div className=\"input-group mb-3 w-50\">\r\n              <button\r\n                className=\"btn btn-outline-header fs-4\"\r\n                type=\"button\"\r\n                onClick={quantityDecrease}\r\n              >\r\n                -\r\n              </button>\r\n\r\n              <input\r\n                type=\"number\"\r\n                value={itemQuantity}\r\n                className=\"form-control bg-white fs-4 text-center\"\r\n                readOnly\r\n              />\r\n              <button\r\n                className=\"btn btn-outline-header fs-4\"\r\n                type=\"button\"\r\n                onClick={quantityIncrease}\r\n              >\r\n                +\r\n              </button>\r\n            </div>\r\n          </div>\r\n          <div className=\"col-12 mt-3\">\r\n            <p className=\"h3 fw-bold\">Choose Size:</p>\r\n            <div\r\n              className=\"row mb-3 d-flex align-items-end\"\r\n              onChange={changeSize}\r\n            >\r\n              {item &&\r\n                Object.entries(item.price).map(([size, price]) => {\r\n                  return (\r\n                    <div key={size} className=\"col-md-4 col-12 mb-1\">\r\n                      <input\r\n                        type=\"radio\"\r\n                        className=\"btn-check\"\r\n                        name=\"item-size-select\"\r\n                        id={\"item-\" + size}\r\n                        value={size}\r\n                        readOnly\r\n                        checked={itemSize === size}\r\n                      />\r\n                      <label\r\n                        className=\"btn btn-outline-header fw-bold\"\r\n                        htmlFor={\"item-\" + size}\r\n                      >\r\n                        {size.charAt(0).toUpperCase() +\r\n                          size.slice(1) +\r\n                          \": \" +\r\n                          price}\r\n                        <FontAwesomeIcon\r\n                          icon={faPizzaSlice}\r\n                          className=\"icon ms-auto\"\r\n                        />\r\n                      </label>\r\n                    </div>\r\n                  );\r\n                })}\r\n            </div>\r\n\r\n            <button\r\n              className=\"btn btn-orange btn-lg border-white border-3\"\r\n              onClick={addToCart}\r\n            >\r\n              Add to Cart\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"container\">\r\n        <OrderMenu />\r\n        {/* <div className=\"text-center py-4\"> \r\n          <h2 className=\"display-5\">Add</h2>\r\n          <ul\r\n            className=\"nav nav-pills justify-content-center\"\r\n            id=\"myTab\"\r\n            role=\"tablist\"\r\n          >\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n              <button\r\n                className=\"nav-link active\"\r\n                id=\"all-tab\"\r\n                data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#all\"\r\n                type=\"button\"\r\n                role=\"tab\"\r\n                aria-controls=\"all\"\r\n                aria-selected=\"true\"\r\n              >\r\n                All\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n              <button\r\n                className=\"nav-link\"\r\n                id=\"item-tab\"\r\n                data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#item\"\r\n                type=\"button\"\r\n                role=\"tab\"\r\n                aria-controls=\"item\"\r\n                aria-selected=\"false\"\r\n              >\r\n                item\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n              <button\r\n                className=\"nav-link\"\r\n                id=\"dinner-tab\"\r\n                data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#dinner\"\r\n                type=\"button\"\r\n                role=\"tab\"\r\n                aria-controls=\"dinner\"\r\n                aria-selected=\"false\"\r\n              >\r\n                Dinner\r\n              </button>\r\n            </li>\r\n            <li className=\"nav-item\" role=\"presentation\">\r\n              <button\r\n                className=\"nav-link\"\r\n                id=\"dissert-tab\"\r\n                data-bs-toggle=\"tab\"\r\n                data-bs-target=\"#dissert\"\r\n                type=\"button\"\r\n                role=\"tab\"\r\n                aria-controls=\"dissert\"\r\n                aria-selected=\"false\"\r\n              >\r\n                Dissert\r\n              </button>\r\n            </li>\r\n          </ul>\r\n        </div> */}\r\n\r\n        {/* Tab panes */}\r\n        {/* <div className=\"tab-content\">\r\n          <div\r\n            className=\"tab-pane active\"\r\n            id=\"all\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"all-tab\"\r\n          >\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <h2 className=\"display-5 text-center\">item</h2>\r\n                <hr />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"card mb-3 shadow\">\r\n                  <div className=\"row g-0\">\r\n                    <div className=\"col-md-4 p-2\">\r\n                      <Image\r\n                        src={item_1}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">item</h5>\r\n                        <hr />\r\n                        <p className=\"card-text\">\r\n                          This is a wider card with supporting text below as a\r\n                          natural lead-in to additional content. This content is\r\n                          a little bit longer.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"card mb-3 shadow\">\r\n                  <div className=\"row g-0\">\r\n                    <div className=\"col-md-4 p-2\">\r\n                      <Image\r\n                        src={item_1}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">item</h5>\r\n                        <hr />\r\n                        <p className=\"card-text\">\r\n                          This is a wider card with supporting text below as a\r\n                          natural lead-in to additional content. This content is\r\n                          a little bit longer.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12\">\r\n                <h2 className=\"display-5 text-center\">Dinner</h2>\r\n                <hr />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"card mb-3 shadow\">\r\n                  <div className=\"row g-0\">\r\n                    <div className=\"col-md-4 p-2\">\r\n                      <Image\r\n                        src={item_1}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">item</h5>\r\n                        <hr />\r\n                        <p className=\"card-text\">\r\n                          This is a wider card with supporting text below as a\r\n                          natural lead-in to additional content. This content is\r\n                          a little bit longer.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"card mb-3 shadow\">\r\n                  <div className=\"row g-0\">\r\n                    <div className=\"col-md-4 p-2\">\r\n                      <Image\r\n                        src={item_1}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">item</h5>\r\n                        <hr />\r\n                        <p className=\"card-text\">\r\n                          This is a wider card with supporting text below as a\r\n                          natural lead-in to additional content. This content is\r\n                          a little bit longer.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n\r\n              <div className=\"col-12\">\r\n                <h2 className=\"display-5 text-center\">Dessert</h2>\r\n                <hr />\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"card mb-3 shadow\">\r\n                  <div className=\"row g-0\">\r\n                    <div className=\"col-md-4 p-2\">\r\n                      <Image\r\n                        src={item_1}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">item</h5>\r\n                        <hr />\r\n                        <p className=\"card-text\">\r\n                          This is a wider card with supporting text below as a\r\n                          natural lead-in to additional content. This content is\r\n                          a little bit longer.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-6\">\r\n                <div className=\"card mb-3 shadow\">\r\n                  <div className=\"row g-0\">\r\n                    <div className=\"col-md-4 p-2\">\r\n                      <Image\r\n                        src={item_1}\r\n                        className=\"img-fluid rounded-start\"\r\n                        alt=\"...\"\r\n                      />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                      <div className=\"card-body\">\r\n                        <h5 className=\"card-title\">item</h5>\r\n                        <hr />\r\n                        <p className=\"card-text\">\r\n                          This is a wider card with supporting text below as a\r\n                          natural lead-in to additional content. This content is\r\n                          a little bit longer.\r\n                        </p>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div\r\n            className=\"tab-pane\"\r\n            id=\"item\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"item-tab\"\r\n          >\r\n            {\" \"}\r\n            item{\" \"}\r\n          </div>\r\n          <div\r\n            className=\"tab-pane\"\r\n            id=\"dinner\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"dinner-tab\"\r\n          >\r\n            {\" \"}\r\n            dinner{\" \"}\r\n          </div>\r\n          <div\r\n            className=\"tab-pane\"\r\n            id=\"dissert\"\r\n            role=\"tabpanel\"\r\n            aria-labelledby=\"dissert-tab\"\r\n          >\r\n            {\" \"}\r\n            Dissert{\" \"}\r\n          </div>\r\n        </div> */}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\orders\\[userId].js",["177"],[],"import Layout from \"../../layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { useEffect } from \"react\";\r\nimport OrderList from \"../../components/orderList\";\r\n\r\nOrder.getLayout = function getLayout(page) {\r\n  return <Layout>{page}</Layout>;\r\n};\r\n\r\nOrder.auth = true;\r\nOrder.authOptions = {\r\n  role: \"user\",\r\n};\r\n\r\nexport async function getServerSideProps(ctx) {\r\n  const userID = ctx.params[\"userId\"];\r\n\r\n  return {\r\n    props: {\r\n      userID,\r\n    },\r\n  };\r\n}\r\n\r\nexport default function Order({ userID }) {\r\n  // console.log(incompleteItems);\r\n\r\n  const [userOrderIncomplete, setUserOrderIncomplete] = useState();\r\n  const [userOrderComplete, setUserOrderComplete] = useState();\r\n\r\n  async function order(userID) {\r\n    let incompleteItems;\r\n    let completeItems;\r\n    const orderItems = await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        userID,\r\n        operation: \"read\",\r\n        operationType: \"orderItems\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        return res.result;\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n      });\r\n    incompleteItems = orderItems.incompleteItems;\r\n    completeItems = orderItems.completeItems;\r\n    // // console.log(completeItems);\r\n\r\n    incompleteItems.forEach((order) => {\r\n      let total = 0;\r\n      order.items.forEach((item) => {\r\n        total +=\r\n          parseInt(item.itemInfo.price[item.itemSize]) * item.itemQuantity;\r\n      });\r\n      order.total = total;\r\n    });\r\n\r\n    completeItems.forEach((order) => {\r\n      let total = 0;\r\n      order.items.forEach((item) => {\r\n        total +=\r\n          parseInt(item.itemInfo.price[item.itemSize]) * item.itemQuantity;\r\n      });\r\n      order.total = total;\r\n    });\r\n\r\n    setUserOrderIncomplete(incompleteItems);\r\n    setUserOrderComplete(completeItems);\r\n  }\r\n\r\n  useEffect(() => {\r\n    order(userID);\r\n    setInterval(() => {\r\n      order(userID);\r\n    }, 5000);\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <h2 className=\"display-5 text-center\">Order</h2>\r\n      <hr className=\"mb-5\" />\r\n\r\n      <ul className=\"nav nav-pills mb-3\" id=\"pills-tab\" role=\"tablist\">\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            className=\"nav-link active\"\r\n            id=\"pills-not-complete-tab\"\r\n            data-bs-toggle=\"pill\"\r\n            data-bs-target=\"#pills-not-complete\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"pills-not-complete\"\r\n            aria-selected=\"true\"\r\n          >\r\n            Not Complete\r\n          </button>\r\n        </li>\r\n        <li className=\"nav-item\" role=\"presentation\">\r\n          <button\r\n            className=\"nav-link\"\r\n            id=\"pills-complete-tab\"\r\n            data-bs-toggle=\"pill\"\r\n            data-bs-target=\"#pills-complete\"\r\n            type=\"button\"\r\n            role=\"tab\"\r\n            aria-controls=\"pills-complete\"\r\n            aria-selected=\"false\"\r\n          >\r\n            Complete\r\n          </button>\r\n        </li>\r\n      </ul>\r\n      <div className=\"tab-content\" id=\"pills-tabContent\">\r\n        <div\r\n          className=\"tab-pane fade show active\"\r\n          id=\"pills-not-complete\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"pills-not-complete-tab\"\r\n        >\r\n          {userOrderIncomplete && <OrderList orders={userOrderIncomplete} />}\r\n        </div>\r\n        <div\r\n          className=\"tab-pane fade\"\r\n          id=\"pills-complete\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"pills-complete-tab\"\r\n        >\r\n          {userOrderComplete && <OrderList orders={userOrderComplete} />}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\search.js",["178"],[],"import Layout from \"../layout/Layout\";\r\n\r\nSearch.getLayout = function getLayout(page) {\r\n  return <Layout>{page}</Layout>;\r\n};\r\n\r\nexport default function Search() {\r\n  return (\r\n    <>\r\n      <div className=\"container\">\r\n        <div className=\"text-center py-5\">\r\n          <h2 className=\"display-5\">Search</h2>\r\n        </div>\r\n\r\n        <div className=\"search-container\">\r\n          <form className=\"d-flex \">\r\n            <input\r\n              className=\"form-control me-sm-2 rounded-pill\"\r\n              type=\"text\"\r\n              placeholder=\"Search\"\r\n            />\r\n            <button className=\"btn btn-outline-orange w-25\" type=\"submit\">\r\n              Search\r\n            </button>\r\n          </form>\r\n          <hr />\r\n        </div>\r\n\r\n        <div className=\"row py-4\">\r\n          <div className=\"col-6\">\r\n            <div className=\"card mb-3 shadow\">\r\n              <div className=\"row g-0\">\r\n                <div className=\"col-md-4 p-2\">\r\n                  <img\r\n                    src=\"./images/pizza-1.png\"\r\n                    className=\"img-fluid rounded-start\"\r\n                    alt=\"...\"\r\n                  />\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                  <div className=\"card-body\">\r\n                    <h5 className=\"card-title\">Pizza</h5>\r\n                    <hr />\r\n                    <p className=\"card-text\">\r\n                      This is a wider card with supporting text below as a\r\n                      natural lead-in to additional content. This content is a\r\n                      little bit longer.\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\user\\profile.js",["179"],[],"import { useState } from \"react\";\r\nimport { useSession } from \"next-auth/react\";\r\nimport Layout from \"../../layout/Layout\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nUserProfile.getLayout = function getLayout(page) {\r\n  return <Layout>{page}</Layout>;\r\n};\r\n\r\nUserProfile.auth = true;\r\nUserProfile.authOptions = {\r\n  role: \"user\",\r\n};\r\n\r\nexport default function UserProfile() {\r\n  const { data: session } = useSession();\r\n\r\n  // console.log(session);\r\n  const [formInput, setFormInput] = useState({\r\n    image: \"\",\r\n    username: session.user.username,\r\n    email: session.user.email,\r\n    address: session.user.address,\r\n    password: \"\",\r\n    confirmPassword: \"\",\r\n  });\r\n\r\n  // Update formInput\r\n  function handleInput(e) {\r\n    const target = e.target;\r\n    const name = target.name;\r\n    const value = target.value;\r\n\r\n    setFormInput({\r\n      ...formInput,\r\n      [name]: value,\r\n    });\r\n\r\n    // console.log(formInput);\r\n  }\r\n\r\n  // Set image src and update formInput.image\r\n  async function imageChange(e) {\r\n    const target = e.target;\r\n    const file = target.files[0];\r\n\r\n    if (file) {\r\n      const src = URL.createObjectURL(file);\r\n\r\n      document.getElementById(\"userImage\").src = src;\r\n\r\n      setFormInput({\r\n        ...formInput,\r\n        image: file.name,\r\n        // itemImageFile: src,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Submit profile form\r\n  async function submitUserInfo(e) {\r\n    e.preventDefault();\r\n\r\n    // Dismiss all previous toast's\r\n    toast.dismiss();\r\n\r\n    const userID = session.user.id;\r\n    // console.log(session);\r\n\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postUser\", {\r\n        userID,\r\n        ...formInput,\r\n        operation: \"update\",\r\n        operationType: \"updateUser\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = response.data;\r\n        console.log(res);\r\n\r\n        // Show toast for each success message\r\n        if (res.successes.length > 0) {\r\n          res.successes.forEach((success) => {\r\n            toast.success(success);\r\n          });\r\n\r\n          const imageFile = document.getElementById(\"userImageFile\").files[0];\r\n\r\n          // If image is set then upload image\r\n          if (imageFile) {\r\n            let formData = new FormData();\r\n            formData.append(\"image\", imageFile);\r\n            await axios\r\n              .post(\"http://localhost:3000/api/uploadImage\", formData)\r\n              .then((response) => {\r\n                const res = response.data;\r\n                console.log(res.success);\r\n                if (res.success.length > 0) {\r\n                  toast.success(res.success);\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                const error = err;\r\n                console.log(error);\r\n              });\r\n          }\r\n        }\r\n\r\n        return res;\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        // console.log(error);\r\n\r\n        // Show toast for each error message\r\n        if (error.data.length > 0) {\r\n          error.data.forEach((error) => {\r\n            toast.error(error);\r\n          });\r\n        }\r\n      });\r\n  }\r\n\r\n  return (\r\n    <div className=\"container py-5\">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <h4 className=\"card-title\">User Info:</h4>\r\n          <div className=\"container\">\r\n            <div className=\"row\">\r\n              <div className=\"col-3\">\r\n                <label\r\n                  className=\"h-100 w-100\"\r\n                  htmlFor=\"userImageFile\"\r\n                  // style={{ border: \"2px solid black\" }}\r\n                >\r\n                  <img\r\n                    src={\r\n                      session.user.image\r\n                        ? \"/uploads/\" + session.user.image\r\n                        : \"/images/No_Image_Available.jpg\"\r\n                    }\r\n                    className=\"img-fluid\"\r\n                    alt=\"\"\r\n                    id=\"userImage\"\r\n                  />\r\n                </label>\r\n                <input\r\n                  type=\"file\"\r\n                  className=\"form-control d-none\"\r\n                  name=\"userImageFile\"\r\n                  id=\"userImageFile\"\r\n                  placeholder=\"User Image\"\r\n                  aria-describedby=\"fileHelpId\"\r\n                  onChange={imageChange}\r\n                />\r\n              </div>\r\n              <div className=\"col-9\">\r\n                <div className=\"mb-3 row\">\r\n                  <label htmlFor=\"username\" className=\"col-xs-4 col-form-label\">\r\n                    Name\r\n                  </label>\r\n                  <div className=\"col-xs-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"username\"\r\n                      id=\"username\"\r\n                      placeholder=\"Name\"\r\n                      value={formInput.username}\r\n                      onChange={handleInput}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3 row\">\r\n                  <label htmlFor=\"email\" className=\"col-xs-4 col-form-label\">\r\n                    E-mail\r\n                  </label>\r\n                  <div className=\"col-xs-8\">\r\n                    <input\r\n                      type=\"email\"\r\n                      className=\"form-control\"\r\n                      name=\"email\"\r\n                      id=\"email\"\r\n                      placeholder=\"E-mail\"\r\n                      value={formInput.email}\r\n                      onChange={handleInput}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"mb-3 row\">\r\n                  <label htmlFor=\"address\" className=\"col-xs-4 col-form-label\">\r\n                    Address\r\n                  </label>\r\n                  <div className=\"col-xs-8\">\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"address\"\r\n                      id=\"address\"\r\n                      placeholder=\"Address\"\r\n                      value={formInput.address}\r\n                      onChange={handleInput}\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-12\">\r\n                <div className=\"row\">\r\n                  <div className=\"col-6\">\r\n                    <div className=\"mb-3 row\">\r\n                      <label\r\n                        htmlFor=\"password\"\r\n                        className=\"col-xs-4 col-form-label\"\r\n                      >\r\n                        Password\r\n                      </label>\r\n                      <div className=\"col-xs-8\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          name=\"password\"\r\n                          id=\"password\"\r\n                          placeholder=\"Password\"\r\n                          value={formInput.password}\r\n                          onChange={handleInput}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className=\"col-6\">\r\n                    <div className=\"mb-3 row\">\r\n                      <label\r\n                        htmlFor=\"confirmPassword\"\r\n                        className=\"col-xs-4 col-form-label\"\r\n                      >\r\n                        Confirm Password\r\n                      </label>\r\n                      <div className=\"col-xs-8\">\r\n                        <input\r\n                          type=\"password\"\r\n                          className=\"form-control\"\r\n                          name=\"confirmPassword\"\r\n                          id=\"confirmPassword\"\r\n                          placeholder=\"Confirm Password\"\r\n                          value={formInput.confirmPassword}\r\n                          onChange={handleInput}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <div className=\"mb-3\">\r\n              <button\r\n                type=\"submit\"\r\n                className=\"btn btn-orange w-100\"\r\n                onClick={submitUserInfo}\r\n              >\r\n                Save\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\pages\\_app.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\adminItems\\itemsModal-Add.js",["180"],[],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport Select from \"react-select\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function ItemAdd({ target, searchItem }) {\r\n  const [selectOptions, setSelectOptions] = useState({});\r\n  const [priceFields, setPriceFields] = useState([{ name: \"\", price: \"\" }]);\r\n\r\n  const [formInput, setFormInput] = useState({\r\n    itemName: \"\",\r\n    itemDesc: \"\",\r\n    price: {},\r\n    itemImage: \"\",\r\n    itemCategory: \"\",\r\n  });\r\n\r\n  // Update the formInput when input change\r\n  function formChange(e) {\r\n    const { dataset, name, value } = e.target;\r\n\r\n    setFormInput({\r\n      ...formInput,\r\n      ...(dataset.nested\r\n        ? { [dataset.nested]: { ...formInput[dataset.nested], [name]: value } }\r\n        : { [name]: value }),\r\n    });\r\n\r\n    // console.log(formInput);\r\n  }\r\n\r\n  // Update the formInput.itemCategory\r\n  async function handleSelectChange(e) {\r\n    // console.log(e);\r\n\r\n    setFormInput({\r\n      ...formInput,\r\n      itemCategory: e.value,\r\n    });\r\n    // console.log(formInput);\r\n  }\r\n\r\n  // Update Image tag and formInput.itemImage\r\n  async function imageChange(e) {\r\n    const target = e.target;\r\n    const file = target.files[0];\r\n\r\n    if (file) {\r\n      const src = URL.createObjectURL(file);\r\n\r\n      document.getElementById(\"itemImage\").src = src;\r\n\r\n      setFormInput({\r\n        ...formInput,\r\n        itemImage: file.name,\r\n        // itemImageFile: src,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Submit Add item form\r\n  async function handleItemSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Dismiss previous toast's\r\n    toast.dismiss();\r\n    // console.log(formInput);\r\n\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        ...formInput,\r\n        operation: \"create\",\r\n        operationType: \"addItem\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = response.data;\r\n\r\n        if (res.success) {\r\n          const imageFile = document.getElementById(\"itemImageFile\").files[0];\r\n\r\n          let formData = new FormData();\r\n          formData.append(\"image\", imageFile);\r\n\r\n          await axios\r\n            .post(\"http://localhost:3000/api/uploadImage\", formData)\r\n            .then((response) => {\r\n              const res = response.data;\r\n              toast.success(res.success);\r\n              // console.log(res.success);\r\n            })\r\n            .catch((err) => {\r\n              const error = err.response;\r\n              console.log(error);\r\n            });\r\n\r\n          toast.success(res.success);\r\n          // Refresh All Items\r\n          searchItem();\r\n        }\r\n\r\n        console.log(res);\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        // console.log(error);\r\n        toast.error(res.error);\r\n      });\r\n  }\r\n\r\n  // update formInput.price and priceFields\r\n  async function handlePriceInput(event, index) {\r\n    let prices = [...priceFields];\r\n    prices[index][event.target.name] = event.target.value;\r\n    setPriceFields(prices);\r\n\r\n    var priceObject = priceFields.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.name]: item.price }),\r\n      {}\r\n    );\r\n\r\n    setFormInput({\r\n      ...formInput,\r\n      price: priceObject,\r\n    });\r\n\r\n    // console.log(formInput);\r\n  }\r\n\r\n  // Add a price field to the form\r\n  async function addPriceInput() {\r\n    setPriceFields([...priceFields, { name: \"\", price: \"\" }]);\r\n    console.log(priceFields);\r\n  }\r\n\r\n  // Remove a price field\r\n  function removePriceInput(index) {\r\n    let fields = [...priceFields];\r\n    fields.splice(index, 1);\r\n    setPriceFields(fields);\r\n    console.log(fields);\r\n  }\r\n\r\n  // Fetch all categories and set categories\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:3000/api/postCategory\", {\r\n        operation: \"read\",\r\n        operationType: \"findAll\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        // console.log(res),\r\n\r\n        let options = [];\r\n        // Set options array\r\n        await res.result.forEach((data) => {\r\n          options.push({\r\n            value: data.name,\r\n            label: data.name.charAt(0).toUpperCase() + data.name.slice(1),\r\n          });\r\n        });\r\n\r\n        // Set category options\r\n        setSelectOptions(options);\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n      });\r\n  }, []);\r\n\r\n  return (\r\n    // Add Item Modal\r\n    <div\r\n      className=\"modal fade\"\r\n      id={target}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"modelTitleId\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Add Item</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"container\">\r\n              <form className=\"row\">\r\n                <div className=\"col-4 h-auto\">\r\n                  <div className=\"mb-3 h-100\">\r\n                    <label\r\n                      className=\"h-100 w-100\"\r\n                      htmlFor=\"itemImageFile\"\r\n                      // style={{ border: \"2px solid black\" }}\r\n                    >\r\n                      <img\r\n                        src=\"/No_Image_Available.jpg\"\r\n                        className=\"img-fluid\"\r\n                        alt=\"\"\r\n                        id=\"itemImage\"\r\n                        style={{ maxHeight: \"223px\" }}\r\n                      />\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control d-none\"\r\n                      name=\"itemImageFile\"\r\n                      id=\"itemImageFile\"\r\n                      placeholder=\"Item Image\"\r\n                      aria-describedby=\"fileHelpId\"\r\n                      onChange={imageChange}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"itemName\" className=\"form-label\">\r\n                      Item Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"itemName\"\r\n                      id=\"itemName\"\r\n                      placeholder=\"Item Name\"\r\n                      onChange={formChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"itemDesc\" className=\"form-label\">\r\n                      Description\r\n                    </label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      name=\"itemDesc\"\r\n                      id=\"itemDesc\"\r\n                      rows=\"3\"\r\n                      onChange={formChange}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    {priceFields &&\r\n                      priceFields.map((priceField, index) => (\r\n                        <div key={index} className=\"col-4 d-flex mb-3\">\r\n                          <div className=\"input-group\">\r\n                            <span className=\"input-group-text\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                placeholder=\"name\"\r\n                                value={priceField.name}\r\n                                onChange={(e) => handlePriceInput(e, index)}\r\n                                style={{\r\n                                  textAlign: \"center\",\r\n                                  padding: 0,\r\n                                  border: 0,\r\n                                  color: \"#ff9900\",\r\n                                  width: \"60px\",\r\n                                }}\r\n                              />\r\n                            </span>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"price\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Price\"\r\n                              value={priceField.price}\r\n                              onChange={(e) => handlePriceInput(e, index)}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => removePriceInput(index)}\r\n                          >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    <div className=\"col-4 mb-3\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={addPriceInput}\r\n                      >\r\n                        Add price\r\n                      </button>\r\n                    </div>\r\n                    {/* <div className=\"col-4\">\r\n                      <div className=\"input-group mb-3\">\r\n                        <span className=\"input-group-text\">Small</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"small\"\r\n                          id=\"itemPriceSmall\"\r\n                          placeholder=\"Price\"\r\n                          aria-label=\"small\"\r\n                          data-nested=\"price\"\r\n                          onChange={formChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <div className=\"input-group mb-3\">\r\n                        <span className=\"input-group-text\">Medium</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"medium\"\r\n                          id=\"itemPriceMedium\"\r\n                          placeholder=\"Price\"\r\n                          aria-label=\"medium\"\r\n                          data-nested=\"price\"\r\n                          onChange={formChange}\r\n                        />\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"col-4\">\r\n                      <div className=\"input-group mb-3\">\r\n                        <span className=\"input-group-text\">Large</span>\r\n                        <input\r\n                          type=\"text\"\r\n                          className=\"form-control\"\r\n                          name=\"large\"\r\n                          id=\"itemPriceLarge\"\r\n                          placeholder=\"Price\"\r\n                          aria-label=\"large\"\r\n                          data-nested=\"price\"\r\n                          onChange={formChange}\r\n                        />\r\n                      </div>\r\n                    </div> */}\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Category</label>\r\n                      <Select\r\n                        instanceId=\"itemCategory\"\r\n                        options={selectOptions}\r\n                        onChange={handleSelectChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-orange w-100\"\r\n                    onClick={handleItemSubmit}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\adminItems\\itemsModal-Edit.js",["181","182"],[],"import { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nimport Select from \"react-select\";\r\n\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faTrash } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nexport default function ItemEdit({ target, searchItem, dataID }) {\r\n  const [selectOptions, setSelectOptions] = useState();\r\n  const [selectValues, setSelectValues] = useState();\r\n\r\n  const [priceFields, setPriceFields] = useState([]);\r\n\r\n  const [editFormInput, setEditFormInput] = useState({\r\n    itemID: \"\",\r\n    itemName: \"\",\r\n    itemDesc: \"\",\r\n    price: {},\r\n    itemImage: \"\",\r\n    itemCategory: [],\r\n  });\r\n\r\n  // Update the editFormInput when input change\r\n  function editFormChange(e) {\r\n    const { dataset, name, value } = e.target;\r\n\r\n    setEditFormInput({\r\n      ...editFormInput,\r\n      ...(dataset.nested\r\n        ? {\r\n            [dataset.nested]: {\r\n              ...editFormInput[dataset.nested],\r\n              [name]: value,\r\n            },\r\n          }\r\n        : { [name]: value }),\r\n    });\r\n\r\n    // console.log(target);\r\n    // console.log(name);\r\n    // console.log(value);\r\n\r\n    // console.log(dataset);\r\n\r\n    // console.log(editFormInput);\r\n  }\r\n\r\n  // Update the editFormInput.itemCategory and selectValues\r\n  async function handleEditSelectChange(e) {\r\n    // console.log(e);\r\n\r\n    let categories = [];\r\n\r\n    await e.forEach((category) => {\r\n      categories.push(category.value);\r\n    });\r\n\r\n    setEditFormInput({\r\n      ...editFormInput,\r\n      itemCategory: categories,\r\n    });\r\n\r\n    setSelectValues(e);\r\n\r\n    // console.log(editFormInput);\r\n  }\r\n\r\n  // Update Image tag and editFormInput.itemImage\r\n  async function editImageChange(e) {\r\n    // console.log(e);\r\n    const target = e.target;\r\n    const file = target.files[0];\r\n\r\n    // console.log(target);\r\n\r\n    if (file) {\r\n      const src = URL.createObjectURL(file);\r\n\r\n      document.getElementById(\"editImage\").src = src;\r\n\r\n      console.log(src);\r\n\r\n      setEditFormInput({\r\n        ...editFormInput,\r\n        itemImage: file.name,\r\n        // itemImageFile: src,\r\n      });\r\n    }\r\n  }\r\n\r\n  // Submit Edit item form\r\n  async function handleEditItemSubmit(e) {\r\n    e.preventDefault();\r\n\r\n    // Dismiss previous toast's\r\n    toast.dismiss();\r\n    // console.log(editFormInput);\r\n\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        ...editFormInput,\r\n        operation: \"update\",\r\n        operationType: \"updateItem\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = response.data;\r\n\r\n        if (res.success != null) {\r\n          const imageFile = document.getElementById(\"editImageFile\").files[0];\r\n\r\n          // if image was set upload image\r\n          if (imageFile) {\r\n            // Set image in FormData\r\n            let formData = new FormData();\r\n            formData.append(\"image\", imageFile);\r\n\r\n            // Upload image\r\n            await axios\r\n              .post(\"http://localhost:3000/api/uploadImage\", formData)\r\n              .then((response) => {\r\n                const res = response.data;\r\n                // console.log(res.success);\r\n                if (res.success) {\r\n                  toast.success(res.success);\r\n                }\r\n              })\r\n              .catch((err) => {\r\n                const error = err.response.data;\r\n                toast.success(error);\r\n                // console.log(error);\r\n              });\r\n          }\r\n          toast.success(res.success);\r\n          // Refresh All Items\r\n          searchItem();\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        toast.success(error);\r\n        // console.log(error);\r\n      });\r\n  }\r\n\r\n  // Set the modal on click\r\n  async function setModal() {\r\n    await axios\r\n      .post(\"http://localhost:3000/api/postItems\", {\r\n        itemId: dataID,\r\n        operation: \"read\",\r\n        operationType: \"findOne\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        const { result } = res;\r\n\r\n        // Convert price object to array\r\n        let fields = [];\r\n        Object.entries(result.price).forEach(([key, value], index) => {\r\n          fields.push({ name: key, price: value });\r\n        });\r\n\r\n        // Set price fields\r\n        setPriceFields(fields);\r\n\r\n        // Set editFormInput\r\n        setEditFormInput({\r\n          itemID: result._id,\r\n          itemName: result.name,\r\n          itemDesc: result.description,\r\n          price: result.price,\r\n          itemImage: result.image,\r\n          itemCategory: result.category,\r\n        });\r\n\r\n        // set src of image tag\r\n        if (result.image.length > 0) {\r\n          document.getElementById(\"editImage\").src = \"/uploads/\" + result.image;\r\n        }\r\n\r\n        // Set category\r\n        if (result.category.length > 0) {\r\n          let options = [];\r\n          result.category.forEach((category) => {\r\n            // console.log(category);\r\n            options.push({\r\n              value: category,\r\n              label: category.charAt(0).toUpperCase() + category.slice(1),\r\n            });\r\n          });\r\n          setSelectValues(options);\r\n          // console.log(options);\r\n        } else {\r\n          // If category is not set then set empty\r\n          let options = [];\r\n          setSelectValues(options);\r\n        }\r\n        // console.log(selectValues);\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        console.log(err);\r\n      });\r\n\r\n    // console.log(priceFields);\r\n  }\r\n\r\n  // update editFormInput.price and priceFields\r\n  async function handlePriceInput(event, index) {\r\n    let prices = [...priceFields];\r\n    prices[index][event.target.name] = event.target.value;\r\n    setPriceFields(prices);\r\n\r\n    var priceObject = priceFields.reduce(\r\n      (obj, item) => Object.assign(obj, { [item.name]: item.price }),\r\n      {}\r\n    );\r\n\r\n    setEditFormInput({\r\n      ...editFormInput,\r\n      price: priceObject,\r\n    });\r\n    // console.log(priceObject);\r\n    // console.log(editFormInput);\r\n  }\r\n\r\n  // Add a price field to the form\r\n  async function addPriceInput() {\r\n    setPriceFields([...priceFields, { name: \"\", price: \"\" }]);\r\n    console.log(priceFields);\r\n  }\r\n\r\n  // Remove a price field\r\n  function removePriceInput(index) {\r\n    let fields = [...priceFields];\r\n    fields.splice(index, 1);\r\n    setPriceFields(fields);\r\n    console.log(fields);\r\n  }\r\n\r\n  // Fetch all categories and set categories\r\n  useEffect(() => {\r\n    axios\r\n      .post(\"http://localhost:3000/api/postCategory\", {\r\n        operation: \"read\",\r\n        operationType: \"findAll\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        // console.log(\"cat: \", res);\r\n        let options = [];\r\n        await res.result.forEach((data) => {\r\n          options.push({\r\n            value: data.name,\r\n            label: data.name.charAt(0).toUpperCase() + data.name.slice(1),\r\n          });\r\n        });\r\n        setSelectOptions(options);\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n      });\r\n  }, []);\r\n\r\n  // Set the modal whenever the Item ID changes\r\n  useEffect(() => {\r\n    let currentItemID;\r\n\r\n    if (dataID.length > 0) {\r\n      if (currentItemID != dataID) {\r\n        // alert(dataID);\r\n        setModal();\r\n      } else {\r\n        currentItemID = dataID;\r\n        // alert(\"Not changed\");\r\n      }\r\n    }\r\n  }, [dataID]);\r\n\r\n  return (\r\n    // Edit Item Modal\r\n    <div\r\n      className=\"modal fade\"\r\n      id={target}\r\n      tabIndex=\"-1\"\r\n      role=\"dialog\"\r\n      aria-labelledby=\"modelTitleId\"\r\n      aria-hidden=\"true\"\r\n    >\r\n      <div className=\"modal-dialog modal-lg\" role=\"document\">\r\n        <div className=\"modal-content\">\r\n          <div className=\"modal-header\">\r\n            <h5 className=\"modal-title\">Edit Item {dataID}</h5>\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn-close\"\r\n              data-bs-dismiss=\"modal\"\r\n              aria-label=\"Close\"\r\n            ></button>\r\n          </div>\r\n          <div className=\"modal-body\">\r\n            <div className=\"container\">\r\n              <form className=\"row\">\r\n                <div className=\"col-4 h-auto\">\r\n                  <div className=\"mb-3 h-100\">\r\n                    <label\r\n                      className=\"h-100 w-100\"\r\n                      htmlFor=\"editImageFile\"\r\n                      // style={{ border: \"2px solid black\" }}\r\n                    >\r\n                      <img\r\n                        src=\"/No_Image_Available.jpg\"\r\n                        className=\"img-fluid\"\r\n                        alt=\"\"\r\n                        id=\"editImage\"\r\n                        style={{ maxHeight: \"223px\" }}\r\n                      />\r\n                    </label>\r\n                    <input\r\n                      type=\"file\"\r\n                      className=\"form-control d-none\"\r\n                      name=\"editImageFile\"\r\n                      id=\"editImageFile\"\r\n                      placeholder=\"Item Image\"\r\n                      aria-describedby=\"editItemImageFile\"\r\n                      onChange={(e) => editImageChange(e)}\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-8\">\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"editItemName\" className=\"form-label\">\r\n                      Item Name\r\n                    </label>\r\n                    <input\r\n                      type=\"text\"\r\n                      className=\"form-control\"\r\n                      name=\"itemName\"\r\n                      id=\"editItemName\"\r\n                      placeholder=\"Item Name\"\r\n                      value={editFormInput.itemName}\r\n                      onChange={editFormChange}\r\n                    />\r\n                  </div>\r\n                  <div className=\"mb-3\">\r\n                    <label htmlFor=\"editItemDesc\" className=\"form-label\">\r\n                      Description\r\n                    </label>\r\n                    <textarea\r\n                      className=\"form-control\"\r\n                      name=\"itemDesc\"\r\n                      id=\"editItemDesc\"\r\n                      rows=\"3\"\r\n                      value={editFormInput.itemDesc}\r\n                      onChange={editFormChange}\r\n                    ></textarea>\r\n                  </div>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                  <div className=\"row\">\r\n                    {priceFields &&\r\n                      priceFields.map((priceField, index) => (\r\n                        <div key={index} className=\"col-4 d-flex mb-3\">\r\n                          <div className=\"input-group\">\r\n                            <span className=\"input-group-text\">\r\n                              <input\r\n                                type=\"text\"\r\n                                className=\"form-control\"\r\n                                name=\"name\"\r\n                                placeholder=\"name\"\r\n                                value={priceField.name}\r\n                                onChange={(e) => handlePriceInput(e, index)}\r\n                                style={{\r\n                                  textAlign: \"center\",\r\n                                  padding: 0,\r\n                                  border: 0,\r\n                                  color: \"#ff9900\",\r\n                                  width: \"60px\",\r\n                                }}\r\n                              />\r\n                            </span>\r\n                            <input\r\n                              type=\"text\"\r\n                              name=\"price\"\r\n                              className=\"form-control\"\r\n                              placeholder=\"Price\"\r\n                              value={priceField.price}\r\n                              onChange={(e) => handlePriceInput(e, index)}\r\n                            />\r\n                          </div>\r\n                          <div\r\n                            className=\"btn btn-danger\"\r\n                            onClick={() => removePriceInput(index)}\r\n                          >\r\n                            <FontAwesomeIcon icon={faTrash} />\r\n                          </div>\r\n                        </div>\r\n                      ))}\r\n                    <div className=\"col-4 mb-3\">\r\n                      <button\r\n                        type=\"button\"\r\n                        className=\"btn btn-primary\"\r\n                        onClick={addPriceInput}\r\n                      >\r\n                        Add price\r\n                      </button>\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-12\">\r\n                    <div className=\"mb-3\">\r\n                      <label className=\"form-label\">Category</label>\r\n                      <Select\r\n                        instanceId=\"editItemCategory\"\r\n                        options={selectOptions}\r\n                        value={selectValues}\r\n                        onChange={handleEditSelectChange}\r\n                      />\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className=\"mb-3\">\r\n                  <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-orange w-100\"\r\n                    onClick={handleEditItemSubmit}\r\n                  >\r\n                    Save\r\n                  </button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\navCart.js",["183"],[],"import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport { faCartShopping } from \"@fortawesome/free-solid-svg-icons\";\r\nimport {\r\n  cartItems,\r\n  itemsCount,\r\n  itemsTotal,\r\n  removeItem,\r\n  resetCart,\r\n} from \"../redux/cartSlice\";\r\nimport Link from \"next/link\";\r\n\r\nexport default function NavCart({ type }) {\r\n  const items = useSelector(cartItems);\r\n  const cartCount = useSelector(itemsCount);\r\n  const cartTotal = useSelector(itemsTotal);\r\n  const dispatch = useDispatch();\r\n\r\n  if (type === \"button\") {\r\n    return (\r\n      <button\r\n        type=\"button\"\r\n        className=\"btn rounded-circle position-relative\"\r\n        data-bs-toggle=\"offcanvas\"\r\n        data-bs-target=\"#offcanvasCart\"\r\n        aria-controls=\"offcanvasCart\"\r\n      >\r\n        <FontAwesomeIcon icon={faCartShopping} className=\"icon\" />\r\n        <span className=\"position-absolute top-100 start-100 translate-middle badge rounded-pill bg-danger\">\r\n          {cartCount}\r\n        </span>\r\n      </button>\r\n    );\r\n  }\r\n\r\n  if (type === \"offcanvas\") {\r\n    return (\r\n      // Offcanvas Cart\r\n      <div\r\n        className=\"offcanvas offcanvas-end\"\r\n        data-bs-scroll=\"true\"\r\n        data-bs-backdrop=\"false\"\r\n        tabIndex=\"-1\"\r\n        id=\"offcanvasCart\"\r\n        aria-labelledby=\"offcanvasCartLabel\"\r\n      >\r\n        <div className=\"offcanvas-header\">\r\n          <h5 className=\"offcanvas-title\" id=\"offcanvasCartLabel\">\r\n            Your Order:\r\n          </h5>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn-close text-reset\"\r\n            data-bs-dismiss=\"offcanvas\"\r\n            aria-label=\"Close\"\r\n          ></button>\r\n        </div>\r\n        <div className=\"offcanvas-body\">\r\n          {items.length > 0 && (\r\n            <button\r\n              className=\"btn btn-orange w-100 mb-3\"\r\n              onClick={() => dispatch(resetCart())}\r\n            >\r\n              Empty Cart\r\n            </button>\r\n          )}\r\n\r\n          <div id=\"pizzaItems\" className=\"row\">\r\n            {items &&\r\n              items.map((item, index) => (\r\n                <div key={index} className=\"col-12\">\r\n                  <div className=\"card mb-3 shadow\">\r\n                    <div className=\"row g-0\">\r\n                      <div className=\"col-md-4 p-2\">\r\n                        <img\r\n                          src={\"/uploads/\" + item.itemInfo.image}\r\n                          className=\"img-fluid rounded-start\"\r\n                          alt={item.itemInfo.name}\r\n                          style={{ maxHeight: \"200px\" }}\r\n                        />\r\n                      </div>\r\n                      <div className=\"col-md-8\">\r\n                        <div className=\"card-body\">\r\n                          <h5 className=\"card-title d-flex\">\r\n                            {item.itemInfo.name.charAt(0).toUpperCase() +\r\n                              item.itemInfo.name.slice(1)}{\" \"}\r\n                            <button\r\n                              type=\"button\"\r\n                              className=\"btn-close ms-auto py-0\"\r\n                              aria-label=\"Close\"\r\n                              onClick={() => dispatch(removeItem(index))}\r\n                            ></button>\r\n                          </h5>\r\n                          <hr />\r\n                          <div className=\"card-text\">\r\n                            <p className=\"mb-1\">Size: {item.itemSize}</p>\r\n                            <p className=\"mb-1\">\r\n                              Quantity: {item.itemQuantity}\r\n                            </p>\r\n                            <p className=\"mb-1\">\r\n                              Price:{\" \"}\r\n                              {Object.entries(item.itemInfo.price).map(\r\n                                ([size, price]) => {\r\n                                  if (size == item.itemSize) {\r\n                                    return price * item.itemQuantity;\r\n                                  }\r\n                                }\r\n                              )}\r\n                            </p>\r\n                          </div>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ))}\r\n          </div>\r\n        </div>\r\n        <div className=\"p-3 border-top d-flex justify-content-between align-items-center\">\r\n          <h4 className=\"offcanvas-title\" id=\"offcanvasCartLabel\">\r\n            Total: {cartTotal}\r\n          </h4>\r\n          <Link href=\"/checkout\">\r\n            <button className=\"btn btn-orange\">Checkout</button>\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\navSearch.js",["184"],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\orderList.js",["185"],[],"import {\r\n  faClock,\r\n  faFireBurner,\r\n  faRoad,\r\n  faHouseCircleCheck,\r\n} from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nexport default function OrderList({ orders }) {\r\n  return orders.map((order, orderIndex) => (\r\n    <div key={orderIndex} className=\"accordion\" id=\"itemAccordion\">\r\n      <div className=\"accordion-item\">\r\n        <h2 className=\"accordion-header\" id=\"headingOne\">\r\n          <button\r\n            className=\"accordion-button collapsed\"\r\n            type=\"button\"\r\n            data-bs-toggle=\"collapse\"\r\n            data-bs-target={\"#collapse-\" + orderIndex}\r\n            aria-expanded=\"true\"\r\n          >\r\n            {order.user && order.user.username}\r\n          </button>\r\n        </h2>\r\n        <div\r\n          id={\"collapse-\" + orderIndex}\r\n          className=\"accordion-collapse collapse\"\r\n          data-bs-parent=\"#itemAccordion\"\r\n        >\r\n          <div className=\"accordion-body\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12 my-4\">\r\n                <div className=\"row text-center\">\r\n                  <div className=\"col-3 d-flex justify-content-center align-items-center p-0\">\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                    <FontAwesomeIcon\r\n                      icon={faClock}\r\n                      className=\"icon fs-3 pe-2\"\r\n                      style={\r\n                        order.status === \"accepted\" && {\r\n                          color: \"orange\",\r\n                        }\r\n                      }\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        border: \"1px dashed #000\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"col-3 d-flex justify-content-center align-items-center ps-1 p-0\">\r\n                    <div\r\n                      style={{\r\n                        border: \"1px dashed #000\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                    <FontAwesomeIcon\r\n                      icon={faFireBurner}\r\n                      className=\"icon fs-3 px-2\"\r\n                      style={\r\n                        order.status === \"oven\" && {\r\n                          color: \"orange\",\r\n                        }\r\n                      }\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        border: \"1px dashed #000\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"col-3 d-flex justify-content-center align-items-center ps-1 p-0\">\r\n                    <div\r\n                      style={{\r\n                        border: \"1px dashed #000\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                    <FontAwesomeIcon\r\n                      icon={faRoad}\r\n                      className=\"icon fs-3 px-2\"\r\n                      style={\r\n                        order.status === \"on its way\" && {\r\n                          color: \"orange\",\r\n                        }\r\n                      }\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        border: \"1px dashed #000\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                  <div className=\"col-3 d-flex justify-content-center align-items-center ps-1 p-0\">\r\n                    <div\r\n                      style={{\r\n                        border: \"1px dashed #000\",\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                    <FontAwesomeIcon\r\n                      icon={faHouseCircleCheck}\r\n                      className=\"icon fs-3 px-2\"\r\n                      style={\r\n                        order.status === \"delivered\" && {\r\n                          color: \"orange\",\r\n                        }\r\n                      }\r\n                    />\r\n                    <div\r\n                      style={{\r\n                        width: \"50%\",\r\n                      }}\r\n                    ></div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div className=\"col-8\">\r\n                <div key={orderIndex} className=\"list-group mb-4\">\r\n                  {order.items.map((item, itemIndex) => (\r\n                    <div\r\n                      key={itemIndex}\r\n                      className=\"list-group-item list-group-item-action p-0 ps-3\"\r\n                      aria-current=\"true\"\r\n                    >\r\n                      <div className=\"row text-center\">\r\n                        <div className=\"col-2 d-flex justify-content-center align-items-center\">\r\n                          <img\r\n                            src={\"/uploads/\" + item.itemInfo.image}\r\n                            className=\"img-fluid\"\r\n                            alt=\"\"\r\n                            style={{ maxWidth: \"72px\" }}\r\n                          />\r\n                        </div>\r\n\r\n                        <div className=\"col-3 p-3 border-start\">\r\n                          <h5>Price</h5>\r\n                          <p>\r\n                            Rs:{\" \"}\r\n                            {Object.entries(item.itemInfo.price).map(\r\n                              ([size, price]) => {\r\n                                if (size == item.itemSize) {\r\n                                  return price;\r\n                                }\r\n                              }\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n\r\n                        <div className=\"col-3 p-3 border-start\">\r\n                          <h5>Quantity</h5>\r\n                          <p>{item.itemQuantity}</p>\r\n                        </div>\r\n\r\n                        <div className=\"col-3 p-3 border-start\">\r\n                          <h5>Total</h5>\r\n                          <p>\r\n                            Rs:{\" \"}\r\n                            {Object.entries(item.itemInfo.price).map(\r\n                              ([size, price]) => {\r\n                                if (size == item.itemSize) {\r\n                                  return price * item.itemQuantity;\r\n                                }\r\n                              }\r\n                            )}\r\n                          </p>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n              <div className=\"col-4\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-body\">\r\n                    <p className=\"card-title h4\">Total Rs: {order.total}</p>\r\n                    <p className=\"card-title\">\r\n                      <span className=\"h5\">Address:</span> {order.address}\r\n                    </p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  ));\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\components\\orderMenu.js",["186","187","188"],[],"import Link from \"next/link\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function OrderMenu() {\r\n  const [loading, setLoading] = useState(true);\r\n  const [items, setItems] = useState([]);\r\n  const [categories, setCategories] = useState([]);\r\n\r\n  // Get all food items\r\n  async function getItems() {\r\n    await axios\r\n      .post(\"/api/postItems\", {\r\n        operation: \"read\",\r\n        operationType: \"findAll\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        setItems(res.result);\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Get all categories\r\n  async function getCategories() {\r\n    await axios\r\n      .post(\"/api/postCategory\", {\r\n        operation: \"read\",\r\n        operationType: \"findAll\",\r\n      })\r\n      .then(async (response) => {\r\n        const res = await response.data;\r\n        setCategories(res.result);\r\n      })\r\n      .catch((err) => {\r\n        const error = err.response;\r\n        console.log(error);\r\n      });\r\n  }\r\n\r\n  // Set everything after page loads\r\n  useEffect(() => {\r\n    getItems();\r\n    getCategories();\r\n\r\n    // Set loading to false to erase empty space\r\n    if (items && categories) {\r\n      setTimeout(() => {\r\n        setLoading(false);\r\n      }, 300);\r\n    }\r\n  }, []);\r\n\r\n  // Uppercase the first letter of every word\r\n  const wordToUpper = (sentence) =>\r\n    sentence\r\n      .split(/ /g)\r\n      .map(\r\n        (word) => `${word.substring(0, 1).toUpperCase()}${word.substring(1)}`\r\n      )\r\n      .join(\" \");\r\n\r\n  // Fill empty space\r\n  if (loading) {\r\n    return <div style={{ height: \"100vh\" }}></div>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <div className=\"text-center py-4\">\r\n        <h2 className=\"display-5\">Menu</h2>\r\n        {/* Nav tabs */}\r\n        <ul\r\n          className=\"nav nav-pills justify-content-center\"\r\n          id=\"myTab\"\r\n          role=\"tablist\"\r\n        >\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link active\"\r\n              id=\"all-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#all-tab-pane\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"all\"\r\n              aria-selected=\"true\"\r\n            >\r\n              All\r\n            </button>\r\n          </li>\r\n\r\n          {/* Set all categories */}\r\n          {categories &&\r\n            categories.map((category, index) => (\r\n              <li key={index} className=\"nav-item\" role=\"presentation\">\r\n                <button\r\n                  className=\"nav-link\"\r\n                  id={category.name + \"-tab\"}\r\n                  data-bs-toggle=\"tab\"\r\n                  data-bs-target={`#${category.name}-tab-pane`}\r\n                  type=\"button\"\r\n                  role=\"tab\"\r\n                  aria-controls={category.name}\r\n                  aria-selected=\"false\"\r\n                >\r\n                  {wordToUpper(category.name)}\r\n                </button>\r\n              </li>\r\n            ))}\r\n\r\n          <li className=\"nav-item\" role=\"presentation\">\r\n            <button\r\n              className=\"nav-link\"\r\n              id=\"deal-tab\"\r\n              data-bs-toggle=\"tab\"\r\n              data-bs-target=\"#deal-tab-pane\"\r\n              type=\"button\"\r\n              role=\"tab\"\r\n              aria-controls=\"deal\"\r\n              aria-selected=\"false\"\r\n            >\r\n              Deal\r\n            </button>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* Tab panes */}\r\n      <div className=\"tab-content\">\r\n        <div\r\n          className=\"tab-pane active\"\r\n          id=\"all-tab-pane\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"all-tab\"\r\n        >\r\n          <div className=\"row\">\r\n            {/* Set items according to categories */}\r\n            {categories &&\r\n              categories.map((category, index) => (\r\n                <>\r\n                  <div key={index} className=\"col-12\">\r\n                    <h2 className=\"display-5 text-center\">\r\n                      {wordToUpper(category.name)}\r\n                    </h2>\r\n                    <hr />\r\n                  </div>\r\n                  {items &&\r\n                    items.map((item, index) => {\r\n                      // console.log(pizza);\r\n\r\n                      if (item.category == category.name) {\r\n                        return (\r\n                          <div key={index} className=\"col-sm-6 col-12\">\r\n                            <Link href={\"/menuItem/\" + item._id}>\r\n                              <a className=\"card mb-3 shadow\">\r\n                                <div className=\"row g-0\">\r\n                                  <div className=\"col-md-4 p-2\">\r\n                                    <img\r\n                                      src={`/uploads/${item.image}`}\r\n                                      className=\"img-fluid\"\r\n                                      alt=\"...\"\r\n                                      style={{ maxHeight: \"165px\" }}\r\n                                    />\r\n                                  </div>\r\n                                  <div className=\"col-md-8\">\r\n                                    <div className=\"card-body\">\r\n                                      <h5 className=\"card-title\">\r\n                                        {wordToUpper(item.name)}\r\n                                      </h5>\r\n                                      <hr />\r\n                                      <p className=\"card-text\">\r\n                                        {item.description}\r\n                                      </p>\r\n                                      <p className=\"text-bold\">\r\n                                        Rs: {Object.values(item.price)[0]}\r\n                                      </p>\r\n                                    </div>\r\n                                  </div>\r\n                                </div>\r\n                              </a>\r\n                            </Link>\r\n                          </div>\r\n                        );\r\n                      }\r\n                    })}\r\n                </>\r\n              ))}\r\n          </div>\r\n        </div>\r\n\r\n        {/* Set items according to the category of the tab categories */}\r\n        {categories &&\r\n          categories.map((category, index) => (\r\n            <div\r\n              key={index}\r\n              className=\"tab-pane\"\r\n              id={category.name + \"-tab-pane\"}\r\n              role=\"tabpanel\"\r\n              aria-labelledby=\"\"\r\n            >\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <h2 className=\"display-5 text-center\">{category.name}</h2>\r\n                  <hr />\r\n                </div>\r\n                {items &&\r\n                  items.map((item) => {\r\n                    // console.log(pizza);\r\n\r\n                    if (item.category == category.name) {\r\n                      return (\r\n                        <div className=\"col-6\">\r\n                          <Link href={\"/menuItem/\" + item._id}>\r\n                            <a className=\"card mb-3 shadow\">\r\n                              <div className=\"row g-0\">\r\n                                <div className=\"col-md-4 p-2\">\r\n                                  <img\r\n                                    src={`/uploads/${item.image}`}\r\n                                    className=\"img-fluid\"\r\n                                    alt=\"...\"\r\n                                    style={{ maxHeight: \"165px\" }}\r\n                                  />\r\n                                </div>\r\n                                <div className=\"col-md-8\">\r\n                                  <div className=\"card-body\">\r\n                                    <h5 className=\"card-title\">\r\n                                      {wordToUpper(item.name)}\r\n                                    </h5>\r\n                                    <hr />\r\n                                    <p className=\"card-text\">\r\n                                      {item.description}\r\n                                    </p>\r\n                                    <p className=\"text-bold\">\r\n                                      Rs: {Object.values(item.price)[0]}\r\n                                    </p>\r\n                                  </div>\r\n                                </div>\r\n                              </div>\r\n                            </a>\r\n                          </Link>\r\n                        </div>\r\n                      );\r\n                    }\r\n                  })}\r\n              </div>\r\n            </div>\r\n          ))}\r\n\r\n        <div\r\n          className=\"tab-pane\"\r\n          id=\"deal-tab-pane\"\r\n          role=\"tabpanel\"\r\n          aria-labelledby=\"deal-tab-pane\"\r\n        >\r\n          {\" \"}\r\n          Deal{\" \"}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","D:\\Projects\\Git Repo Public\\Next\\Restaurant\\lib\\dbConnect.js",[],[],"D:\\Projects\\Git Repo Public\\Next\\Restaurant\\lib\\mongodb.js",[],[],{"ruleId":"189","severity":1,"message":"190","line":168,"column":6,"nodeType":"191","endLine":168,"endColumn":8,"suggestions":"192"},{"ruleId":"193","severity":1,"message":"194","line":84,"column":11,"nodeType":"195","endLine":84,"endColumn":76},{"ruleId":"196","severity":1,"message":"197","line":84,"column":11,"nodeType":"195","endLine":84,"endColumn":76},{"ruleId":"193","severity":1,"message":"194","line":125,"column":25,"nodeType":"195","endLine":130,"endColumn":27},{"ruleId":"189","severity":1,"message":"198","line":106,"column":6,"nodeType":"191","endLine":106,"endColumn":8,"suggestions":"199"},{"ruleId":"193","severity":1,"message":"194","line":298,"column":37,"nodeType":"195","endLine":303,"endColumn":39},{"ruleId":"193","severity":1,"message":"194","line":125,"column":19,"nodeType":"195","endLine":134,"endColumn":21},{"ruleId":"200","severity":1,"message":"201","line":8,"column":1,"nodeType":"202","endLine":107,"endColumn":6},{"ruleId":"193","severity":1,"message":"194","line":164,"column":23,"nodeType":"195","endLine":169,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":37,"column":13,"nodeType":"195","endLine":37,"endColumn":75},{"ruleId":"196","severity":1,"message":"197","line":37,"column":13,"nodeType":"195","endLine":37,"endColumn":75},{"ruleId":"189","severity":1,"message":"203","line":96,"column":6,"nodeType":"191","endLine":96,"endColumn":18,"suggestions":"204"},{"ruleId":"193","severity":1,"message":"194","line":140,"column":13,"nodeType":"195","endLine":144,"endColumn":15},{"ruleId":"189","severity":1,"message":"205","line":79,"column":6,"nodeType":"191","endLine":79,"endColumn":8,"suggestions":"206"},{"ruleId":"193","severity":1,"message":"194","line":34,"column":19,"nodeType":"195","endLine":38,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":138,"column":19,"nodeType":"195","endLine":147,"endColumn":21},{"ruleId":"193","severity":1,"message":"194","line":204,"column":23,"nodeType":"195","endLine":210,"endColumn":25},{"ruleId":"189","severity":1,"message":"207","line":280,"column":6,"nodeType":"191","endLine":280,"endColumn":14,"suggestions":"208"},{"ruleId":"193","severity":1,"message":"194","line":313,"column":23,"nodeType":"195","endLine":319,"endColumn":25},{"ruleId":"193","severity":1,"message":"194","line":76,"column":25,"nodeType":"195","endLine":81,"endColumn":27},{"ruleId":"193","severity":1,"message":"194","line":86,"column":31,"nodeType":"195","endLine":90,"endColumn":33},{"ruleId":"193","severity":1,"message":"194","line":135,"column":27,"nodeType":"195","endLine":140,"endColumn":29},{"ruleId":"189","severity":1,"message":"209","line":55,"column":6,"nodeType":"191","endLine":55,"endColumn":8,"suggestions":"210"},{"ruleId":"193","severity":1,"message":"194","line":162,"column":37,"nodeType":"195","endLine":167,"endColumn":39},{"ruleId":"193","severity":1,"message":"194","line":221,"column":35,"nodeType":"195","endLine":226,"endColumn":37},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'searchCategory'. Either include it or remove the dependency array.","ArrayExpression",["211"],"@next/next/no-img-element","Do not use <img>. Use Image from 'next/image' instead. See: https://nextjs.org/docs/messages/no-img-element","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","React Hook useEffect has a missing dependency: 'searchOrder'. Either include it or remove the dependency array.",["212"],"import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","React Hook useEffect has a missing dependency: 'item._id'. Either include it or remove the dependency array.",["213"],"React Hook useEffect has a missing dependency: 'userID'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'setModal'. Either include it or remove the dependency array.",["215"],"React Hook useEffect has missing dependencies: 'categories' and 'items'. Either include them or remove the dependency array.",["216"],{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},"Update the dependencies array to be: [searchCategory]",{"range":"229","text":"230"},"Update the dependencies array to be: [searchOrder]",{"range":"231","text":"232"},"Update the dependencies array to be: [item._id, menuItemID]",{"range":"233","text":"234"},"Update the dependencies array to be: [userID]",{"range":"235","text":"236"},"Update the dependencies array to be: [dataID, setModal]",{"range":"237","text":"238"},"Update the dependencies array to be: [categories, items]",{"range":"239","text":"240"},[4799,4801],"[searchCategory]",[2871,2873],"[searchOrder]",[2724,2736],"[item._id, menuItemID]",[2011,2013],"[userID]",[7507,7515],"[dataID, setModal]",[1382,1384],"[categories, items]"]