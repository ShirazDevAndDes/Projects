"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/postUser";
exports.ids = ["pages/api/postUser"];
exports.modules = {

/***/ "axios":
/*!************************!*\
  !*** external "axios" ***!
  \************************/
/***/ ((module) => {

module.exports = require("axios");

/***/ }),

/***/ "bcrypt":
/*!*************************!*\
  !*** external "bcrypt" ***!
  \*************************/
/***/ ((module) => {

module.exports = require("bcrypt");

/***/ }),

/***/ "jsonwebtoken":
/*!*******************************!*\
  !*** external "jsonwebtoken" ***!
  \*******************************/
/***/ ((module) => {

module.exports = require("jsonwebtoken");

/***/ }),

/***/ "mongoose":
/*!***************************!*\
  !*** external "mongoose" ***!
  \***************************/
/***/ ((module) => {

module.exports = require("mongoose");

/***/ }),

/***/ "validator":
/*!****************************!*\
  !*** external "validator" ***!
  \****************************/
/***/ ((module) => {

module.exports = require("validator");

/***/ }),

/***/ "(api)/./lib/dbConnect.js":
/*!**************************!*\
  !*** ./lib/dbConnect.js ***!
  \**************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ dbConnect)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nconst MONGODB_URI = process.env.MONGODB_URI;\nif (!MONGODB_URI) {\n    throw new Error(\"MongoDB is not connected\");\n}\nlet cached = global.mongoose;\nif (!cached) {\n    cached = global.mongoose = {\n        conn: null,\n        promise: null\n    };\n}\nasync function dbConnect() {\n    if (cached.conn) {\n        console.log(\"DB Connected\");\n        return cached.conn;\n    }\n    if (!cached.promise) {\n        const options = {\n            bufferCommands: false\n        };\n        cached.promise = await mongoose__WEBPACK_IMPORTED_MODULE_0___default().connect(MONGODB_URI).then((mongoose1)=>{\n            return mongoose1;\n        });\n    }\n    cached.conn = await cached.process;\n    return cached.conn;\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9saWIvZGJDb25uZWN0LmpzLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFnQztBQUVoQyxNQUFNQyxXQUFXLEdBQUdDLE9BQU8sQ0FBQ0MsR0FBRyxDQUFDRixXQUFXO0FBRTNDLElBQUksQ0FBQ0EsV0FBVyxFQUFFO0lBQ2hCLE1BQU0sSUFBSUcsS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7Q0FDN0M7QUFFRCxJQUFJQyxNQUFNLEdBQUdDLE1BQU0sQ0FBQ04sUUFBUTtBQUU1QixJQUFJLENBQUNLLE1BQU0sRUFBRTtJQUNYQSxNQUFNLEdBQUdDLE1BQU0sQ0FBQ04sUUFBUSxHQUFHO1FBQUVPLElBQUksRUFBRSxJQUFJO1FBQUVDLE9BQU8sRUFBRSxJQUFJO0tBQUUsQ0FBQztDQUMxRDtBQUVjLGVBQWVDLFNBQVMsR0FBRztJQUN4QyxJQUFJSixNQUFNLENBQUNFLElBQUksRUFBRTtRQUNmRyxPQUFPLENBQUNDLEdBQUcsQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUM1QixPQUFPTixNQUFNLENBQUNFLElBQUksQ0FBQztLQUNwQjtJQUVELElBQUksQ0FBQ0YsTUFBTSxDQUFDRyxPQUFPLEVBQUU7UUFDbkIsTUFBTUksT0FBTyxHQUFHO1lBQ2RDLGNBQWMsRUFBRSxLQUFLO1NBQ3RCO1FBRURSLE1BQU0sQ0FBQ0csT0FBTyxHQUFHLE1BQU1SLHVEQUFnQixDQUFDQyxXQUFXLENBQUMsQ0FBQ2MsSUFBSSxDQUFDLENBQUNmLFNBQVEsR0FBSztZQUN0RSxPQUFPQSxTQUFRLENBQUM7U0FDakIsQ0FBQyxDQUFDO0tBQ0o7SUFFREssTUFBTSxDQUFDRSxJQUFJLEdBQUcsTUFBTUYsTUFBTSxDQUFDSCxPQUFPLENBQUM7SUFDbkMsT0FBT0csTUFBTSxDQUFDRSxJQUFJLENBQUM7Q0FDcEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9yZXN0YXVyYW50Ly4vbGliL2RiQ29ubmVjdC5qcz8xZDNiIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuXHJcbmNvbnN0IE1PTkdPREJfVVJJID0gcHJvY2Vzcy5lbnYuTU9OR09EQl9VUkk7XHJcblxyXG5pZiAoIU1PTkdPREJfVVJJKSB7XHJcbiAgdGhyb3cgbmV3IEVycm9yKFwiTW9uZ29EQiBpcyBub3QgY29ubmVjdGVkXCIpO1xyXG59XHJcblxyXG5sZXQgY2FjaGVkID0gZ2xvYmFsLm1vbmdvb3NlO1xyXG5cclxuaWYgKCFjYWNoZWQpIHtcclxuICBjYWNoZWQgPSBnbG9iYWwubW9uZ29vc2UgPSB7IGNvbm46IG51bGwsIHByb21pc2U6IG51bGwgfTtcclxufVxyXG5cclxuZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gZGJDb25uZWN0KCkge1xyXG4gIGlmIChjYWNoZWQuY29ubikge1xyXG4gICAgY29uc29sZS5sb2coXCJEQiBDb25uZWN0ZWRcIik7XHJcbiAgICByZXR1cm4gY2FjaGVkLmNvbm47XHJcbiAgfVxyXG5cclxuICBpZiAoIWNhY2hlZC5wcm9taXNlKSB7XHJcbiAgICBjb25zdCBvcHRpb25zID0ge1xyXG4gICAgICBidWZmZXJDb21tYW5kczogZmFsc2UsXHJcbiAgICB9O1xyXG5cclxuICAgIGNhY2hlZC5wcm9taXNlID0gYXdhaXQgbW9uZ29vc2UuY29ubmVjdChNT05HT0RCX1VSSSkudGhlbigobW9uZ29vc2UpID0+IHtcclxuICAgICAgcmV0dXJuIG1vbmdvb3NlO1xyXG4gICAgfSk7XHJcbiAgfVxyXG5cclxuICBjYWNoZWQuY29ubiA9IGF3YWl0IGNhY2hlZC5wcm9jZXNzO1xyXG4gIHJldHVybiBjYWNoZWQuY29ubjtcclxufVxyXG4iXSwibmFtZXMiOlsibW9uZ29vc2UiLCJNT05HT0RCX1VSSSIsInByb2Nlc3MiLCJlbnYiLCJFcnJvciIsImNhY2hlZCIsImdsb2JhbCIsImNvbm4iLCJwcm9taXNlIiwiZGJDb25uZWN0IiwiY29uc29sZSIsImxvZyIsIm9wdGlvbnMiLCJidWZmZXJDb21tYW5kcyIsImNvbm5lY3QiLCJ0aGVuIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(api)/./lib/dbConnect.js\n");

/***/ }),

/***/ "(api)/./models/userInfo.js":
/*!****************************!*\
  !*** ./models/userInfo.js ***!
  \****************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (__WEBPACK_DEFAULT_EXPORT__)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n\nmongoose__WEBPACK_IMPORTED_MODULE_0___default().pluralize(false);\nconst UserSchema = new (mongoose__WEBPACK_IMPORTED_MODULE_0___default().Schema)({\n    image: {\n        type: String\n    },\n    username: {\n        type: String\n    },\n    email: {\n        type: String,\n        required: true\n    },\n    password: {\n        type: String,\n        required: true\n    },\n    address: {\n        type: String\n    },\n    role: {\n        type: String,\n        required: true\n    }\n});\n/* harmony default export */ const __WEBPACK_DEFAULT_EXPORT__ = ((mongoose__WEBPACK_IMPORTED_MODULE_0___default().models.foodUsers) || mongoose__WEBPACK_IMPORTED_MODULE_0___default().model(\"foodUsers\", UserSchema));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9tb2RlbHMvdXNlckluZm8uanMuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQWdDO0FBRWhDQSx5REFBa0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztBQUUxQixNQUFNRSxVQUFVLEdBQUcsSUFBSUYsd0RBQWUsQ0FBQztJQUNyQ0ksS0FBSyxFQUFFO1FBQ0xDLElBQUksRUFBRUMsTUFBTTtLQUNiO0lBQ0RDLFFBQVEsRUFBRTtRQUNSRixJQUFJLEVBQUVDLE1BQU07S0FDYjtJQUNERSxLQUFLLEVBQUU7UUFDTEgsSUFBSSxFQUFFQyxNQUFNO1FBQ1pHLFFBQVEsRUFBRSxJQUFJO0tBQ2Y7SUFDREMsUUFBUSxFQUFFO1FBQ1JMLElBQUksRUFBRUMsTUFBTTtRQUNaRyxRQUFRLEVBQUUsSUFBSTtLQUNmO0lBQ0RFLE9BQU8sRUFBRTtRQUNQTixJQUFJLEVBQUVDLE1BQU07S0FDYjtJQUNETSxJQUFJLEVBQUU7UUFDSlAsSUFBSSxFQUFFQyxNQUFNO1FBQ1pHLFFBQVEsRUFBRSxJQUFJO0tBQ2Y7Q0FDRixDQUFDO0FBRUYsaUVBQWVULGtFQUF5QixJQUN0Q0EscURBQWMsQ0FBQyxXQUFXLEVBQUVFLFVBQVUsQ0FBQyxFQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vcmVzdGF1cmFudC8uL21vZGVscy91c2VySW5mby5qcz8zMjk0Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBtb25nb29zZSBmcm9tIFwibW9uZ29vc2VcIjtcclxuXHJcbm1vbmdvb3NlLnBsdXJhbGl6ZShmYWxzZSk7XHJcblxyXG5jb25zdCBVc2VyU2NoZW1hID0gbmV3IG1vbmdvb3NlLlNjaGVtYSh7XHJcbiAgaW1hZ2U6IHtcclxuICAgIHR5cGU6IFN0cmluZyxcclxuICB9LFxyXG4gIHVzZXJuYW1lOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgfSxcclxuICBlbWFpbDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBwYXNzd29yZDoge1xyXG4gICAgdHlwZTogU3RyaW5nLFxyXG4gICAgcmVxdWlyZWQ6IHRydWUsXHJcbiAgfSxcclxuICBhZGRyZXNzOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgfSxcclxuICByb2xlOiB7XHJcbiAgICB0eXBlOiBTdHJpbmcsXHJcbiAgICByZXF1aXJlZDogdHJ1ZSxcclxuICB9LFxyXG59KTtcclxuXHJcbmV4cG9ydCBkZWZhdWx0IG1vbmdvb3NlLm1vZGVscy5mb29kVXNlcnMgfHxcclxuICBtb25nb29zZS5tb2RlbChcImZvb2RVc2Vyc1wiLCBVc2VyU2NoZW1hKTtcclxuIl0sIm5hbWVzIjpbIm1vbmdvb3NlIiwicGx1cmFsaXplIiwiVXNlclNjaGVtYSIsIlNjaGVtYSIsImltYWdlIiwidHlwZSIsIlN0cmluZyIsInVzZXJuYW1lIiwiZW1haWwiLCJyZXF1aXJlZCIsInBhc3N3b3JkIiwiYWRkcmVzcyIsInJvbGUiLCJtb2RlbHMiLCJmb29kVXNlcnMiLCJtb2RlbCJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./models/userInfo.js\n");

/***/ }),

/***/ "(api)/./pages/api/postUser.js":
/*!*******************************!*\
  !*** ./pages/api/postUser.js ***!
  \*******************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handle)\n/* harmony export */ });\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! mongoose */ \"mongoose\");\n/* harmony import */ var mongoose__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(mongoose__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _lib_dbConnect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../../lib/dbConnect */ \"(api)/./lib/dbConnect.js\");\n/* harmony import */ var _models_userInfo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../models/userInfo */ \"(api)/./models/userInfo.js\");\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! bcrypt */ \"bcrypt\");\n/* harmony import */ var bcrypt__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(bcrypt__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! validator */ \"validator\");\n/* harmony import */ var validator__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(validator__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! jsonwebtoken */ \"jsonwebtoken\");\n/* harmony import */ var jsonwebtoken__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(jsonwebtoken__WEBPACK_IMPORTED_MODULE_5__);\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! axios */ \"axios\");\n/* harmony import */ var axios__WEBPACK_IMPORTED_MODULE_6___default = /*#__PURE__*/__webpack_require__.n(axios__WEBPACK_IMPORTED_MODULE_6__);\n\n\n\n\n\n\n\nasync function handle(req, res) {\n    let successes = [];\n    let errors = [];\n    let result = null;\n    const method = await req.method;\n    // Create a JWT Token\n    function createToken(id) {\n        const maxAge = 1 * 24 * 60 * 60;\n        const token = jsonwebtoken__WEBPACK_IMPORTED_MODULE_5___default().sign({\n            id\n        }, \"secret\", {\n            expiresIn: \"1d\"\n        });\n        // console.log(token);\n        return token;\n    }\n    // Create a JWT Refresh Token\n    function createRefreshToken(id) {\n        const maxAge = 1 * 24 * 60 * 60;\n        const token = jsonwebtoken__WEBPACK_IMPORTED_MODULE_5___default().sign({\n            id\n        }, \"refreshSecret\", {\n            expiresIn: \"1d\"\n        });\n        // console.log(token);\n        return token;\n    }\n    if (method === \"POST\") {\n        const body = await req.body;\n        const operation = body.operation;\n        const operationType = body.operationType;\n        await (0,_lib_dbConnect__WEBPACK_IMPORTED_MODULE_1__[\"default\"])();\n        // If it is a (Create) request\n        if (operation === \"create\") {\n            // Create the users account\n            if (operationType === \"signup\") {\n                const email = body.email;\n                const password = body.password;\n                let hashPass = false;\n                let createAccount = false;\n                let emailVal = false;\n                // Check if email and password is submitted\n                if (email.length < 0 && password.length < 0) {\n                    // Validate E-mail\n                    if (validator__WEBPACK_IMPORTED_MODULE_4___default().isEmail(email)) {\n                        emailVal = true;\n                        // Check if the email has already been used\n                        const emailCheck = await _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n                            email\n                        });\n                        // if email exists send error\n                        if (emailCheck) {\n                            errors.push(\"You already have an account\");\n                        } else {\n                            // hash the password\n                            hashPass = bcrypt__WEBPACK_IMPORTED_MODULE_3___default().hashSync(password, 10);\n                            // console.log(hashPass);\n                            // If the password was hashed submit the user data to the database\n                            if (hashPass) {\n                                createAccount = _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].create({\n                                    email,\n                                    password: hashPass,\n                                    role: \"user\"\n                                });\n                                // if account was created then send success message\n                                if (createAccount) {\n                                    successes.push(\"Your account has been created\");\n                                } else {\n                                    // if account was not created then send error message\n                                    errors.push(\"Your account was not created, something went wrong\");\n                                }\n                            } else {\n                                // if password was not hashed then send error message\n                                errors.push(\"Something went wrong while securing your password please try again\");\n                            }\n                        }\n                    } else {\n                        // if E-mail submitted was not a valid email send error message\n                        errors.push(\"Your E-mail is not Valid\");\n                    }\n                } else {\n                    // if either email or password field was empty send error message\n                    errors.push(\"Please fill in your E-mail and Password\");\n                }\n            }\n        }\n        // If it is a (Read) request\n        if (operation === \"read\") {\n            // If operation type is set to (getAllUsers)\n            if (operationType === \"getAllUsers\") {\n                // Get all users name with the role of user\n                const user = await _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].find({\n                    role: \"user\"\n                }).select(\"-email -address -role -__v -password\");\n                if (user) {\n                    // If users found then send the user data and success message\n                    successes.push(\"Users Found\");\n                    result = user;\n                } else {\n                    // If users not found then send error message\n                    errors.push(\"Users not found\");\n                }\n            }\n            // If operation type is set to (userInfo)\n            if (operationType === \"userInfo\") {\n                const email = body.email;\n                // get all users by there email\n                const user = await _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n                    email\n                }).select(\"-__v -password\");\n                if (user) {\n                    // If users found then send the user data and success message\n                    successes.push(\"User Found\");\n                    result = user;\n                } else {\n                    // If users not found then send error message\n                    errors.push(\"User not found\");\n                }\n            }\n            // If operation type is set to (userLogin)\n            if (operationType === \"userLogin\") {\n                const email = body.email;\n                const password = body.password;\n                const role = body.role;\n                let userData = null;\n                let user = null;\n                let emailVerified = false;\n                let passVerified = false;\n                let roleVerified = false;\n                // Check if E-mail field is empty\n                if (email.length <= 0) {\n                    errors.push(\"Email is empty\");\n                }\n                // Check if password field is empty\n                if (password.length <= 0) {\n                    errors.push(\"Password is empty\");\n                }\n                // if both E-mail and Password field is not empty then continue\n                if (email.length > 0 && password.length > 0) {\n                    // Check if user exists\n                    userData = await _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findOne({\n                        email\n                    });\n                    if (userData) {\n                        // Set to true to indicate email is verified\n                        emailVerified = true;\n                        // check if sent role and user's role are the same\n                        if (userData.role === role) {\n                            // Set to true to indicate user role is verified\n                            roleVerified = true;\n                            if (emailVerified) {\n                                // hash the password\n                                const hashPass = userData.password;\n                                // Compare with sent password\n                                const compare_pass = await bcrypt__WEBPACK_IMPORTED_MODULE_3___default().compare(password, hashPass);\n                                if (compare_pass) {\n                                    // if password comparison is true then set to true\n                                    passVerified = true;\n                                } else {\n                                    // if password comparison is false then set error\n                                    errors.push(\"password is not correct\");\n                                }\n                            } else {\n                                // if E-mail is not verified sent error\n                                errors.push(\"Email is not Correct\");\n                            }\n                        } else {\n                            // if user role is not verified sent error\n                            errors.push(\"You are not the correct user\");\n                        }\n                    } else {\n                        // if user E-mail does not exists then sent error\n                        errors.push(\"Your Email is invalid\");\n                    }\n                }\n                // If both E-mail and password are verified then continue\n                if (emailVerified && passVerified) {\n                    const email = await userData.email;\n                    const token = createToken(\"1\");\n                    const refreshToken = createRefreshToken(1);\n                    // Set user data to send to credentials authentication process\n                    user = {\n                        email,\n                        data: {\n                            dada: \"more Data\",\n                            token,\n                            refreshToken\n                        }\n                    };\n                    result = user;\n                } else {\n                    // If either E-mail or password are not verified then set error\n                    errors.push(\"Something went wrong \\n Please Check Your E-mail and Password\");\n                }\n            }\n        }\n        // If it is a (Update) request\n        if (operation === \"update\") {\n            // If operation type is set to (updateUser)\n            if (operationType === \"updateUser\") {\n                const userID = body.userID;\n                const image = body.image;\n                const username = body.username;\n                const email = body.email;\n                const address = body.address;\n                const password = body.password;\n                const confirmPassword = body.confirmPassword;\n                let userData;\n                let passVerified = false;\n                // check if password was sent or not\n                if (password.length > 0) {\n                    // check if password and confirm password field match\n                    if (password === confirmPassword) {\n                        passVerified = true;\n                    } else {\n                        // check if password and confirm password field match\n                        errors.push(\"Your password and correct password do not match\");\n                    }\n                }\n                // check if image was sent\n                if (image.length > 0) {\n                    const uploadImage = await _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findByIdAndUpdate(userID, {\n                        image\n                    });\n                }\n                // if password was sent\n                if (passVerified) {\n                    const hashPassword = bcrypt__WEBPACK_IMPORTED_MODULE_3___default().hashSync(password, 10);\n                    // Update user data with password\n                    userData = await _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findByIdAndUpdate(userID, {\n                        username,\n                        email,\n                        address,\n                        password: hashPassword\n                    });\n                } else {\n                    // Update user data without password\n                    userData = await _models_userInfo__WEBPACK_IMPORTED_MODULE_2__[\"default\"].findByIdAndUpdate(userID, {\n                        username,\n                        email,\n                        address\n                    }, {\n                        new: true\n                    });\n                }\n                // if user data was updated then\n                if (userData) {\n                    // set success message and set result to sent back to user\n                    successes.push(\"Your data has been updated\");\n                    result = userData;\n                } else {\n                    // set error message if user data was not updated\n                    errors.push(\"Your data could not be updated\");\n                }\n            }\n        }\n        // If it is a (Delete) request\n        if (operation === \"delete\") {}\n        // Send the response\n        if (errors.length === 0) {\n            res.status(200).send({\n                successes,\n                result\n            });\n        } else {\n            res.status(400).send(errors);\n        }\n    }\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(api)/./pages/api/postUser.js\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/postUser.js"));
module.exports = __webpack_exports__;

})();